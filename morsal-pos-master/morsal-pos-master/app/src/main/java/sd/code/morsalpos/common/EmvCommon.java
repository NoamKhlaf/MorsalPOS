package sd.code.morsalpos.common;

import com.vanstone.trans.api.EmvLibApi;
import com.vanstone.trans.api.FileApi;
import com.vanstone.trans.api.Itwell;
import com.vanstone.trans.api.LcdApi;
import com.vanstone.trans.api.MathsApi;
import com.vanstone.trans.api.constants.CoreDefConstants;
import com.vanstone.trans.api.struct.EmvAppList;
import com.vanstone.trans.api.struct.EmvCapk;
import com.vanstone.trans.api.struct.EmvParam;
import com.vanstone.utils.ByteUtils;
import com.vanstone.utils.CommonConvert;
import com.vanstone.utils.Log;




/*********************************************************************************************
 * �� ��: ���Ĺ� �� Ȩ: �����������Ӽ���(����)���޹�˾ �� ��: �������: �� �������: �� �� �� ֵ : �� �� ע: ��
 **********************************************************************************************/
public class EmvCommon {
	public static int G_IcCardMode;
	/*************************************************************************************
	 * �� ��: ������ �� Ȩ: �����������������Ƽ����޹�˾�� ��������: ICC�忨�¼������� �������: cardtype: 0��������
	 * 1��֧�ֵ����ֽ��������� 2�������� �������: pTrackBuf: ȡ�õ����� �� �� ֵ: �� �� ע: ��¼��־
	 *************************************************************************************/
	public static int EmvCardProcSL(int tradetype, int procType,
			TCardAccountInfo pAccInfo) {
		int Ret = 0;
		Ret = EmvCardProc(tradetype, procType, pAccInfo);
		return Ret;
	}

	/*******************************************************************
	 * �� ��: ������ �� Ȩ: �����������������Ƽ����޹�˾�� ��������: ICC�忨�¼������� �������: tradetype: 0��������
	 * 1��֧�ֵ����ֽ��������� 2�������� �������: pTrackBuf: ȡ�õ����� �� �� ֵ : �� �� ע: ��
	 ********************************************************************/
	public static int EmvCardProc(int tradetype, int procType,
			TCardAccountInfo pAccInfo) {
		int iRet;
		int nLen = 0;
		byte[] sTemp = new byte[256];

		LcdApi.LedLightOn_Api(CardConstants.LED_YELLOW | CardConstants.LED_BLUE);

		if ((procType & CardConstants.CARD_EMVSIMPLE) != 0) {
			GlobalConstants.g_EmvFullOrSim = 0; // ��������
		} else {
			GlobalConstants.g_EmvFullOrSim = 1; // ��������
		}

		EmvLibApi.EmvGetParam_Api(GlobalConstants.stEmvParam);
		// �����DCCȷ�Ͻ����򽫽��׻��Ҵ�������Ϊ��̨��������

		GlobalConstants.stEmvParam.setTransType((byte) tradetype); // ���ý���������
		iRet = SetTermCLQuanti(GlobalConstants.stEmvParam, procType);
		if (iRet != 0)
			return iRet;
		if ((procType & CardConstants.CARD_EMVFULLNOCASH) != 0) {
			GlobalConstants.stEmvParam.setTermIsSupEct((byte) 0);
			GlobalConstants.stEmvParam.setPureECCSupportState((byte) 0);
		}

		if ((procType & CardConstants.CARD_EMVFULLCASH) != 0) {
			GlobalConstants.stEmvParam.setTermIsSupEct((byte) 1);
			GlobalConstants.stEmvParam.setPureECCSupportState((byte) 1);
		}

		if ((procType & CardConstants.CARD_EMVFULLCASHSALE) != 0) // ֻ���ѻ��ĵ����ֽ���
		{
			GlobalConstants.stEmvParam.setTermIsSupEct((byte) 1);
			GlobalConstants.stEmvParam.setPureECCSupportState((byte) 1);
			// ���ն����͸�Ϊֻ�ѻ�������
			GlobalConstants.stEmvParam
					.setTerminalType((byte) ConvertTermTypeToOnlyOffline(GlobalConstants.stEmvParam
							.getTerminalType()));
			if (GlobalConstants.stEmvParam.getTerminalType() == 0)
				return EmvCommonConstants.ERR_UNSUPPORTED;
		}

		EmvLibApi.EmvSetParam_Api(GlobalConstants.stEmvParam);
		if ((procType & CardConstants.CARD_QPASS) != 0) {
			iRet = EmvLibApi.EmvQPBOCPreProcess_Api();
			if (iRet != 0)
				return iRet;
		}
		// Ӧ��ѡ��
		iRet = EmvLibApi.EmvAppSel_Api(EmvCommonConstants.ICC_EMV,000000);
		Log.writeLog("EmvAppSel_Api:" + iRet);
		if (iRet != 0) {
			// IC����λʧ��
			if (iRet == EmvLibConstants.ERR_ICCRESET
					|| iRet == EmvCommonConstants.ERR_GPORSP) {
				return EmvCommonConstants.E_NEED_FALLBACK;
			} else
				return iRet;
		}

		// �޸��ն�����
		// ModifyTermCapForApp();

		// ��ȡӦ������
		iRet = EmvLibApi.EmvReadAppData_Api();
		if (iRet != EmvLibConstants.EMV_OK) {
			return iRet;
		}

		// //��ȡ����������к�
		// if( PedApi.PEDReadPinPadSn_Api(sTemp) == 0x00 )
		// {
		// nLen = (sTemp[0] - 0x30) * 10 + (sTemp[1] - 0x30) + 2;
		// EmvLibApi.EmvSetTLV_Api((short)0x9f1e, ByteUtils.subBytes(sTemp,
		// nLen-8), 8);
		// }
		if (EmvLibApi.EmvGetPath_Api() == EmvCommonConstants.PATH_QPBOC) {
			// SystemApi.Beep_Api(DefConstants.BEEPNORMAL);
			// if(gCtrlParam.PICC_Type == EXPICCCARD)
			// {
			// ScrClsEx_Api();
			// ScrDispEx_Api(LINE2, 0, "Pls remove card", CDISP);
			// }
		}

		// �����ŵ����ݺ�������
		iRet = GetEmvTrackData(pAccInfo);
		if (iRet < 0) {
			return PosMacroConstants.E_TRANS_FAIL;
		}

		// ��������ȡ�ÿ��ž��˳�
		if ((procType & CardConstants.CARD_EMVSIMPLE) != 0) {
			return 0;
		}

		// ��Ƭ������֤(ֻ��Sale/PreAuth��Ҫ����EMV����) Balance ��������EMV����(ICBC)
		iRet = EmvLibApi.EmvCardAuth_Api();
		if (iRet != EmvLibConstants.EMV_OK) {
			return iRet;
		}
		return 0;
	}

	public static int SetTermCLQuanti(EmvParam pTermParam, int procType) {
		if ((procType & CardConstants.CARD_EMVSIMPLE) != 0) {
			int tempI = pTermParam.getTermTransQuali()[0];
			tempI |= 0x20;
			tempI &= ~(0x40 | 0x80 | 0x80);
			ByteUtils.memcpy(pTermParam.getTermTransQuali(),
					CommonConvert.intToBytes(tempI), 1);
			tempI = pTermParam.getTermTransQuali()[1];
			tempI |= 0x80;
			ByteUtils.memcpy(pTermParam.getTermTransQuali(), 1,
					CommonConvert.intToBytes(tempI), 0, 1);
			// pTermParam.SetTermTransQuali()[0];

		} else if ((procType & (CardConstants.CARD_QPASS
				| CardConstants.CARD_QPASSONLINE | CardConstants.CARD_QPASSOFFLINE)) != 0) {
			int tempI = pTermParam.getTermTransQuali()[0];
			tempI |= 0x20;
			tempI &= ~(0x40 | 0x80);
			ByteUtils.memcpy(pTermParam.getTermTransQuali(),
					CommonConvert.intToBytes(tempI), 1);
			if ((procType & CardConstants.CARD_QPASSONLINE) != 0) {
				if ((pTermParam.getTermTransQuali()[0] & 0x08) != 0) {
					return PosMacroConstants.E_TRANS_FAIL;
				}
				tempI = pTermParam.getTermTransQuali()[1];
				tempI |= 0x80;
				ByteUtils.memcpy(pTermParam.getTermTransQuali(), 1,
						CommonConvert.intToBytes(tempI), 0, 1);

				if ((pTermParam.getTermTransQuali()[0] & (0x4 | 0x2)) != 0) {
					tempI = pTermParam.getTermTransQuali()[1];
					tempI |= 0x40; //
					ByteUtils.memcpy(pTermParam.getTermTransQuali(), 1,
							CommonConvert.intToBytes(tempI), 0, 1);
				}
				pTermParam.setPureECCSupportState((byte) 0);
			} else {
				if ((procType & CardConstants.CARD_QPASSOFFLINE) != 0) {
					tempI = pTermParam.getTermTransQuali()[0];
					tempI |= 0x08;
					ByteUtils.memcpy(pTermParam.getTermTransQuali(),
							CommonConvert.intToBytes(tempI), 1);
					ByteUtils.memcpy(pTermParam.getTermTransQuali(), 1,
							new byte[1], 0, 1);
				}
				pTermParam.setPureECCSupportState((byte) 1);
			}
		} else if ((procType & CardConstants.CARD_EMVFULLNOCASH) != 0) {
			int tempI = pTermParam.getTermTransQuali()[0];
			tempI |= 0x40;
			tempI &= ~(0x80 | 0x20);
			ByteUtils.memcpy(pTermParam.getTermTransQuali(),
					CommonConvert.intToBytes(tempI), 1);
		}
		return 0;
	}
	public static int ConvertTermTypeToOnlyOffline(int orgTermType)
	{
		if(orgTermType == 0x22 || orgTermType == 0x23)
			return 0x23;
		else if(orgTermType == 0x12 || orgTermType == 0x13)
			return  0x13;
		else if(orgTermType == 0x15 || orgTermType == 0x16)
			return 0x16;
		else if(orgTermType == 0x25 || orgTermType == 0x26)
			return 0x26;
		else if(orgTermType == 0x35 || orgTermType == 0x35)
			return 0x36;
		return 0;

	}
	/*********************************************************************************************
	��          ��: ¬����
	��          Ȩ: �����������Ӽ���(����)���޹�˾
	��������: ȡemv�ŵ�����
	�������: ��
	�������: pTrackBuf:�ŵ�����ָ��
	��  ��  ֵ :  0:�ɹ�                -1:���ŵ����ź������Ų�һ��
	          -2:Track2��PAN��û��   -4:���÷���������ʧ��
	��           ע: ��
	 **********************************************************************************************/
	public static int GetEmvTrackData(TCardAccountInfo pAccInfo)
	{
		int iRet = 0;
		int iLength = 0;
		byte[] sTemp = new byte[30];
		byte cHaveTrack2 = 0;
		byte cReadPan = 0;
		byte cRet = 0;

		cRet = pAccInfo.cardMode;
		pAccInfo.toBean(new byte[pAccInfo.size()]);
		pAccInfo.cardMode = cRet;
		// Read Track 2 Equivalent Data
		byte[] iLengthAddr = CommonConvert.intToBytes(iLength);
		iRet = EmvLibApi.EmvGetTLV_Api((short)0x57, sTemp, iLengthAddr);
		iLength = CommonConvert.bytesToInt(iLengthAddr);

		if(iRet == EmvLibConstants.EMV_OK)
		{
			byte[] p =null;

			pAccInfo.Track2Len = (byte) (iLength * 2);
			Itwell.FormBcdToAsc( pAccInfo.Track2, sTemp, iLength * 2);
			if(pAccInfo.Track2[ByteUtils.strlen(pAccInfo.Track2) -1] == 0x3f)
			{
				pAccInfo.Track2[ByteUtils.strlen(pAccInfo.Track2) -1] = 0;
				pAccInfo.Track2Len--;
			}
			int index = CommonConvert.BytesToString(pAccInfo.Track2).indexOf('=');

			if(index != -1)
			{
				if(index > DefConstants.MCARDNO_MAX_LEN + 1)
					return PosMacroConstants.E_ERR_SWIPE;
				ByteUtils.memcpy(pAccInfo.MainAcc,pAccInfo.Track2, index);
			}
			else
				return PosMacroConstants.E_ERR_SWIPE;
		}
		 else
			 	return PosMacroConstants.E_ERR_SWIPE;
		// read PAN
		sTemp = new byte[30];
		iLengthAddr = CommonConvert.intToBytes(iLength);
		//	     iRet = EmvLib_GetTLV(0x5A, &sTemp[1], iLengthAddr);
		iRet = EmvLibApi.EmvGetTLV_Api((short)0x5A, sTemp, iLengthAddr);
		iLength = CommonConvert.bytesToInt(iLengthAddr);

		if(iRet == EmvLibConstants.EMV_OK)
		{
			byte[] tmp = new byte[24];
			MathsApi.BcdToAsc_Api(tmp, sTemp, iLength * 2);
			if(tmp[iLength * 2 - 1] == 'F')
				tmp[iLength * 2 - 1] = 0;
			else
				tmp[iLength * 2 ] = 0;

			if(ByteUtils.strcmp(tmp, pAccInfo.MainAcc) != 0)
				return PosMacroConstants.E_ERR_SWIPE;
		}

		byte[] temp = CommonConvert.intToBytes(pAccInfo.ucPanSeqNo);
		iLengthAddr = CommonConvert.intToBytes(iLength);
		iRet = EmvLibApi.EmvGetTLV_Api((short)0x5F34, temp, iLengthAddr);
		if(iRet == EmvLibConstants.EMV_OK)
		{
			GlobalConstants.PosCom.stTrans.bPanSeqNoOk = 1;
		}else
		{
			GlobalConstants.PosCom.stTrans.bPanSeqNoOk = 0;
		}
		GlobalConstants.PosCom.getStTrans().setUcPanSeqNo(temp[0]);
		iLength = CommonConvert.bytesToInt(iLengthAddr);
		pAccInfo.ucPanSeqNo =(byte) CommonConvert.bytesToInt(temp);

		// read Application Expiration Date
//		if(cReadPan != 0)
//		{
			sTemp = new byte[30];

			iLengthAddr = CommonConvert.intToBytes(iLength);
			iRet = EmvLibApi.EmvGetTLV_Api((short)0x5F24, sTemp, iLengthAddr);
			iLength = CommonConvert.bytesToInt(iLengthAddr);

			if(iRet == EmvLibConstants.EMV_OK)
			{
				ByteUtils.memcpy(pAccInfo.ExpDate, sTemp, 3);
			}
//		}
		// read other data for print slip

		iLengthAddr = CommonConvert.intToBytes(iLength);
		if(EmvLibApi.EmvGetTLV_Api((short)0x5f20, pAccInfo.HoldCardName, iLengthAddr)!=0)
			pAccInfo.HoldCardName[iLength] = 0;
		else
		{
			if(EmvLibApi.EmvGetTLV_Api((short)0x9f0b, pAccInfo.HoldCardName, iLengthAddr) == 0)
				pAccInfo.HoldCardName[iLength] = 0;
			iLength = CommonConvert.bytesToInt(iLengthAddr);
		}

		return 0;
	}
	/*******************************************************************
	��	  ��: ������
	��	  Ȩ: �����������Ӽ���(����)���޹�˾
	��������: ��ʼ��APP�б�
	�������: ��
	�������: ��
	�� �� ֵ: ��
	��	  ע: ��
	 ********************************************************************/
	public static void InitTestApps()
	{
		int OnLinePinFlag = 1, i = 0;

		EmvAppList[] Aids = new EmvAppList[11];
		ByteUtils.initStructs(Aids);

		for(i = 0; i < 11; i++)
		{
			//			Aids[i] = new EmvAppList();
			ByteUtils.memcpyHex(Aids[i].getVersion(), "/x00/x8C", "/x", "", 2);
			Aids[i].setbOnlinePin((byte) 1);
		}

		Aids[0].setAidLen((byte) 7);
		ByteUtils.memcpyHex(Aids[0].getAID(),"/xA0/x00/x00/x03/x33/x01/x01", "/x", "", Aids[0].getAidLen());
		Aids[0].setCL_FloorLimit(0);
		Aids[0].setCL_TransLimit(1000000);
		
		Aids[1].setAidLen((byte) 7);
		ByteUtils.memcpyHex(Aids[1].getAID(),"/xA0/x00/x00/x00/x03/x10/x10", "/x", "", Aids[1].getAidLen());

		Aids[2].setAidLen((byte) 8);
		ByteUtils.memcpyHex(Aids[2].getAID(),"/xA0/x00/x00/x00/x03/x10/x10/x03", "/x", "", Aids[2].getAidLen());

		Aids[3].setAidLen((byte) 8);
		ByteUtils.memcpyHex(Aids[3].getAID(),"/xA0/x00/x00/x00/x03/x10/x10/x04", "/x", "", Aids[3].getAidLen());

		Aids[4].setAidLen((byte) 8);
		ByteUtils.memcpyHex(Aids[4].getAID(),"/xA0/x00/x00/x00/x03/x10/x10/x05", "/x", "", Aids[4].getAidLen());

		Aids[5].setAidLen((byte) 8);
		ByteUtils.memcpyHex(Aids[5].getAID(),"/xA0/x00/x00/x00/x03/x10/x10/x06", "/x", "", Aids[5].getAidLen());

		Aids[6].setAidLen((byte) 8);
		ByteUtils.memcpyHex(Aids[6].getAID(),"/xA0/x00/x00/x00/x03/x10/x10/x07", "/x", "", Aids[6].getAidLen());

		Aids[7].setAidLen((byte) 7);
		ByteUtils.memcpyHex(Aids[7].getAID(),"/xA0/x00/x00/x00/x99/x90/x90", "/x", "", Aids[7].getAidLen());

		Aids[8].setAidLen((byte) 6);
		ByteUtils.memcpyHex(Aids[8].getAID(),"/xA0/x00/x00/x99/x99/x01", "/x", "", Aids[8].getAidLen());

		Aids[9].setAidLen((byte) 7);
		ByteUtils.memcpyHex(Aids[9].getAID(),"/xA0/x00/x00/x00/x04/x10/x10", "/x", "", Aids[9].getAidLen());

		Aids[10].setAidLen((byte) 7);
		ByteUtils.memcpyHex(Aids[10].getAID(),"/xA0/x00/x00/x00/x65/x10/x10", "/x", "", Aids[10].getAidLen());

		for(i = 0; i < 11; i++)
			EmvLibApi.EmvAddApp_Api(Aids[i].toBytes());

	}
	/*******************************************************************
	��	    ��: ������
	��	    Ȩ: �����������Ӽ���(����)���޹�˾
	��������: ��ʼ��Capk�ļ�
	�������: ��
	�������: ��
	��  ��  ֵ : ��
	��          ע: ��
	 ********************************************************************/
	public static void InitCapkFile()
	{
		int	i = 0;

		EmvCapk[] tempCAPK = new EmvCapk[]{
				new EmvCapk(
						new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x03, (byte)0x33}, (byte)0x80,
						(byte)0x00, (byte)0x01, (byte)0x80,
						new byte[]{(byte)0xCC,(byte)0xDB,(byte)0xA6,(byte)0x86,(byte)0xE2,(byte)0xEF,(byte)0xB8,(byte)0x4C,(byte)0xE2,(byte)0xEA,(byte)0x01,(byte)0x20,(byte)0x9E,(byte)0xEB,(byte)0x53,(byte)0xBE,
							(byte)0xF2,(byte)0x1A,(byte)0xB6,(byte)0xD3,(byte)0x53,(byte)0x27,(byte)0x4F,(byte)0xF8,(byte)0x39,(byte)0x1D,(byte)0x70,(byte)0x35,(byte)0xD7,(byte)0x6E,(byte)0x21,(byte)0x56,
							(byte)0xCA,(byte)0xED,(byte)0xD0,(byte)0x75,(byte)0x10,(byte)0xE0,(byte)0x7D,(byte)0xAF,(byte)0xCA,(byte)0xCA,(byte)0xBB,(byte)0x7C,(byte)0xCB,(byte)0x09,(byte)0x50,(byte)0xBA,
							(byte)0x2F,(byte)0x0A,(byte)0x3C,(byte)0xEC,(byte)0x31,(byte)0x3C,(byte)0x52,(byte)0xEE,(byte)0x6C,(byte)0xD0,(byte)0x9E,(byte)0xF0,(byte)0x04,(byte)0x01,(byte)0xA3,(byte)0xD6,
							(byte)0xCC,(byte)0x5F,(byte)0x68,(byte)0xCA,(byte)0x5F,(byte)0xCD,(byte)0x0A,(byte)0xC6,(byte)0x13,(byte)0x21,(byte)0x41,(byte)0xFA,(byte)0xFD,(byte)0x1C,(byte)0xFA,(byte)0x36,
							(byte)0xA2,(byte)0x69,(byte)0x2D,(byte)0x02,(byte)0xDD,(byte)0xC2,(byte)0x7E,(byte)0xDA,(byte)0x4C,(byte)0xD5,(byte)0xBE,(byte)0xA6,(byte)0xFF,(byte)0x21,(byte)0x91,(byte)0x3B,
							(byte)0x51,(byte)0x3C,(byte)0xE7,(byte)0x8B,(byte)0xF3,(byte)0x3E,(byte)0x68,(byte)0x77,(byte)0xAA,(byte)0x5B,(byte)0x60,(byte)0x5B,(byte)0xC6,(byte)0x9A,(byte)0x53,(byte)0x4F,
							(byte)0x37,(byte)0x77,(byte)0xCB,(byte)0xED,(byte)0x63,(byte)0x76,(byte)0xBA,(byte)0x64,(byte)0x9C,(byte)0x72,(byte)0x51,(byte)0x6A,(byte)0x7E,(byte)0x16,(byte)0xAF,(byte)0x85
						},
						(byte)3, new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
						new byte[]{(byte)0x00}
						),

						new EmvCapk(
								new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x03,(byte)0x33}, (byte)0x57, 
								(byte)0x00, (byte)0x04, (byte)0x40,
								new byte[]{(byte)0xE8,(byte)0x10,(byte)0x5E,(byte)0x77,(byte)0x86,(byte)0x1F,(byte)0xD2,(byte)0xEB,(byte)0x72,(byte)0x7C,(byte)0x84,(byte)0xE3,(byte)0x6D,(byte)0x3D,(byte)0x4A,(byte)0x56,
									(byte)0x66,(byte)0xBD,(byte)0x0A,(byte)0xDC,(byte)0xE8,(byte)0x78,(byte)0x1F,(byte)0x01,(byte)0x45,(byte)0xD3,(byte)0xD8,(byte)0x2D,(byte)0x72,(byte)0xB9,(byte)0x27,(byte)0x48,
									(byte)0xE2,(byte)0x2D,(byte)0x54,(byte)0x04,(byte)0xC6,(byte)0xC4,(byte)0x1F,(byte)0x3E,(byte)0xC8,(byte)0xB7,(byte)0x90,(byte)0xDE,(byte)0x2F,(byte)0x61,(byte)0xCF,(byte)0x29,
									(byte)0xFA,(byte)0xEC,(byte)0xB1,(byte)0x68,(byte)0xC7,(byte)0x9F,(byte)0x5C,(byte)0x86,(byte)0x66,(byte)0x76,(byte)0x2D,(byte)0x53,(byte)0xCC,(byte)0x26,(byte)0xA4,(byte)0x60
								},
								(byte)0,new byte[]{(byte)0x00},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
								new byte[]{(byte)0x00}
								),

								new EmvCapk(
										new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x03,(byte)0x33},(byte)0x58,
										(byte)0x00,(byte)0x04,(byte)0x40,
										new byte[]{(byte)0xFF,(byte)0xC2,(byte)0xB1,(byte)0x51,(byte)0x33,(byte)0x20,(byte)0xC2,(byte)0x75,(byte)0x41,(byte)0x1D,(byte)0xBA,(byte)0xDD,(byte)0x21,(byte)0x88,(byte)0x20,(byte)0x3F,
											(byte)0x7B,(byte)0x62,(byte)0x51,(byte)0x9F,(byte)0x8C,(byte)0x7B,(byte)0xA9,(byte)0x8E,(byte)0xF8,(byte)0xAA,(byte)0x9F,(byte)0xD6,(byte)0xD2,(byte)0xE4,(byte)0x75,(byte)0x98,
											(byte)0x4E,(byte)0x38,(byte)0x3C,(byte)0x3E,(byte)0x12,(byte)0x78,(byte)0x4B,(byte)0x42,(byte)0xB0,(byte)0x66,(byte)0x96,(byte)0x0E,(byte)0xEA,(byte)0x0C,(byte)0x8F,(byte)0xC8,
											(byte)0x09,(byte)0x9E,(byte)0x14,(byte)0x12,(byte)0x80,(byte)0x55,(byte)0xD6,(byte)0x7A,(byte)0x66,(byte)0x6C,(byte)0xCA,(byte)0x5A,(byte)0x05,(byte)0x8C,(byte)0x26,(byte)0xA4
										},
										(byte)0,new byte[]{(byte)0x00},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
										new byte[]{(byte)0x00}
										),

										new EmvCapk(
												new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x03,(byte)0x33},(byte)0x61,
												(byte)0x00,(byte)0x01,(byte)0x80,
												new byte[]{(byte)0x83,(byte)0x4D,(byte)0x2A,(byte)0x38,(byte)0x7C,(byte)0x5A,(byte)0x5F,(byte)0x17,(byte)0x6E,(byte)0xF3,(byte)0xE6,(byte)0x6C,(byte)0xAA,(byte)0xF8,(byte)0x3F,(byte)0x19,
													(byte)0x4B,(byte)0x15,(byte)0xAA,(byte)0xD2,(byte)0x47,(byte)0x0C,(byte)0x78,(byte)0xC7,(byte)0x7D,(byte)0x6E,(byte)0xB3,(byte)0x8E,(byte)0xDA,(byte)0xE3,(byte)0xA2,(byte)0xF9,
													(byte)0xBA,(byte)0x16,(byte)0x23,(byte)0xF6,(byte)0xA5,(byte)0x8C,(byte)0x89,(byte)0x2C,(byte)0xC9,(byte)0x25,(byte)0x63,(byte)0x2D,(byte)0xFF,(byte)0x48,(byte)0xCE,(byte)0x95,
													(byte)0x4B,(byte)0x21,(byte)0xA5,(byte)0x3E,(byte)0x1F,(byte)0x1E,(byte)0x43,(byte)0x66,(byte)0xBE,(byte)0x40,(byte)0x3C,(byte)0x27,(byte)0x9B,(byte)0x90,(byte)0x02,(byte)0x7C,
													(byte)0xBC,(byte)0x72,(byte)0x60,(byte)0x5D,(byte)0xB6,(byte)0xC7,(byte)0x90,(byte)0x49,(byte)0xB8,(byte)0x99,(byte)0x2C,(byte)0xB4,(byte)0x91,(byte)0x2E,(byte)0xFA,(byte)0x27,
													(byte)0x0B,(byte)0xEC,(byte)0xAB,(byte)0x3A,(byte)0x7C,(byte)0xEF,(byte)0xE0,(byte)0x5B,(byte)0xFA,(byte)0x46,(byte)0xE4,(byte)0xC7,(byte)0xBB,(byte)0xCF,(byte)0x7C,(byte)0x7A,
													(byte)0x17,(byte)0x3B,(byte)0xD9,(byte)0x88,(byte)0xD9,(byte)0x89,(byte)0xB3,(byte)0x2C,(byte)0xB7,(byte)0x9F,(byte)0xAC,(byte)0x8E,(byte)0x35,(byte)0xFB,(byte)0xE1,(byte)0x86,
													(byte)0x0E,(byte)0x7E,(byte)0xA9,(byte)0xF2,(byte)0x38,(byte)0xA9,(byte)0x2A,(byte)0x35,(byte)0x93,(byte)0x55,(byte)0x2D,(byte)0x03,(byte)0xD1,(byte)0xE3,(byte)0x86,(byte)0x01
												},
												(byte)1,new byte[]{(byte)0x03},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
												new byte[]{(byte)0x00}
												),

												new EmvCapk(
														new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x03,(byte)0x33},(byte)0x62,
														(byte)0x00,(byte)0x01,(byte)0x80,
														new byte[]{(byte)0xB5,(byte)0xCD,(byte)0xD1,(byte)0xE5,(byte)0x36,(byte)0x88,(byte)0x19,(byte)0xFC,(byte)0x3E,(byte)0xA6,(byte)0x5B,(byte)0x80,(byte)0xC6,(byte)0x81,(byte)0x17,(byte)0xBB,
															(byte)0xC2,(byte)0x9F,(byte)0x90,(byte)0x96,(byte)0xEB,(byte)0xD2,(byte)0x17,(byte)0x26,(byte)0x9B,(byte)0x58,(byte)0x3B,(byte)0x07,(byte)0x45,(byte)0xE0,(byte)0xC1,(byte)0x64,
															(byte)0x33,(byte)0xD5,(byte)0x4B,(byte)0x8E,(byte)0xF3,(byte)0x87,(byte)0xB1,(byte)0xE6,(byte)0xCD,(byte)0xDA,(byte)0xED,(byte)0x49,(byte)0x23,(byte)0xC3,(byte)0x9E,(byte)0x37,
															(byte)0x0E,(byte)0x5C,(byte)0xAD,(byte)0xFE,(byte)0x04,(byte)0x17,(byte)0x73,(byte)0x02,(byte)0x3A,(byte)0x6B,(byte)0xC0,(byte)0xA0,(byte)0x33,(byte)0xB0,(byte)0x03,(byte)0x1B,
															(byte)0x00,(byte)0x48,(byte)0xF1,(byte)0x8A,(byte)0xC1,(byte)0x59,(byte)0x77,(byte)0x3C,(byte)0xB6,(byte)0x69,(byte)0x5E,(byte)0xE9,(byte)0x9F,(byte)0x55,(byte)0x1F,(byte)0x41,
															(byte)0x48,(byte)0x83,(byte)0xFB,(byte)0x05,(byte)0xE5,(byte)0x26,(byte)0x40,(byte)0xE8,(byte)0x93,(byte)0xF4,(byte)0x81,(byte)0x60,(byte)0x82,(byte)0x24,(byte)0x1D,(byte)0x7B,
															(byte)0xFA,(byte)0x36,(byte)0x40,(byte)0x96,(byte)0x00,(byte)0x03,(byte)0xAD,(byte)0x75,(byte)0x17,(byte)0x89,(byte)0x5C,(byte)0x50,(byte)0xE1,(byte)0x84,(byte)0xAA,(byte)0x95,
															(byte)0x63,(byte)0x67,(byte)0xB7,(byte)0xBF,(byte)0xFC,(byte)0x6D,(byte)0x86,(byte)0x16,(byte)0xA7,(byte)0xB5,(byte)0x7E,(byte)0x2D,(byte)0x44,(byte)0x7A,(byte)0xB3,(byte)0xE1
														},
														(byte)3,new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
														new byte[]{(byte)0x00}
														),

														new EmvCapk(
																new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x03,(byte)0x33},(byte)0x63,
																(byte)0x00,(byte)0x01,(byte)0x90,
																new byte[]{(byte)0x86,(byte)0x7E,(byte)0xCA,(byte)0x26,(byte)0xA5,(byte)0x74,(byte)0x72,(byte)0xDE,(byte)0xFB,(byte)0x6C,(byte)0xA9,(byte)0x42,(byte)0x89,(byte)0x31,(byte)0x2B,(byte)0xA3,
																	(byte)0x9C,(byte)0x63,(byte)0x05,(byte)0x25,(byte)0x18,(byte)0xDC,(byte)0x48,(byte)0x0B,(byte)0x6E,(byte)0xD4,(byte)0x91,(byte)0xAC,(byte)0xC3,(byte)0x7C,(byte)0x02,(byte)0x88,
																	(byte)0x46,(byte)0xF4,(byte)0xD7,(byte)0xB7,(byte)0x9A,(byte)0xFA,(byte)0xEE,(byte)0xFA,(byte)0x07,(byte)0xFB,(byte)0x01,(byte)0x1D,(byte)0xAA,(byte)0x46,(byte)0xC0,(byte)0x60,
																	(byte)0x21,(byte)0xE9,(byte)0x32,(byte)0xD5,(byte)0x01,(byte)0xBF,(byte)0x52,(byte)0xF2,(byte)0x83,(byte)0x4A,(byte)0xDE,(byte)0x3A,(byte)0xC7,(byte)0x68,(byte)0x9E,(byte)0x94,
																	(byte)0xB2,(byte)0x48,(byte)0xB2,(byte)0x8F,(byte)0x3F,(byte)0xE2,(byte)0x80,(byte)0x36,(byte)0x69,(byte)0xDE,(byte)0xDA,(byte)0x00,(byte)0x09,(byte)0x88,(byte)0xDA,(byte)0x12,
																	(byte)0x49,(byte)0xF9,(byte)0xA8,(byte)0x91,(byte)0x55,(byte)0x8A,(byte)0x05,(byte)0xA1,(byte)0xE5,(byte)0xA7,(byte)0xBD,(byte)0x2C,(byte)0x28,(byte)0x2F,(byte)0xE1,(byte)0x8D,
																	(byte)0x20,(byte)0x41,(byte)0x89,(byte)0xA9,(byte)0x99,(byte)0x4D,(byte)0x4A,(byte)0xDD,(byte)0x86,(byte)0xC0,(byte)0xCE,(byte)0x50,(byte)0x95,(byte)0x2E,(byte)0xD8,(byte)0xBC,
																	(byte)0xEC,(byte)0x0C,(byte)0xE6,(byte)0x33,(byte)0x67,(byte)0x91,(byte)0x88,(byte)0x28,(byte)0x5E,(byte)0x51,(byte)0xE1,(byte)0xBE,(byte)0xD8,(byte)0x40,(byte)0xFC,(byte)0xBF,
																	(byte)0xC1,(byte)0x09,(byte)0x53,(byte)0x93,(byte)0x9A,(byte)0xF4,(byte)0x9D,(byte)0xB9,(byte)0x00,(byte)0x48,(byte)0x91,(byte)0x2E,(byte)0x48,(byte)0xB4,(byte)0x41,(byte)0x81
																},
																(byte)1,new byte[]{(byte)0x03},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																new byte[]{(byte)0x00}
																),

																new EmvCapk(
																		new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x03,(byte)0x33},(byte)0x64,
																		(byte)0x00,(byte)0x01,(byte)0xA0,
																		new byte[]{(byte)0x91,(byte)0x12,(byte)0x3E,(byte)0xCF,(byte)0x02,(byte)0x30,(byte)0xE3,(byte)0xCB,(byte)0x24,(byte)0x5C,(byte)0x88,(byte)0xDD,(byte)0xFA,(byte)0x3E,(byte)0xE5,(byte)0x7B,
																			(byte)0xC5,(byte)0x8E,(byte)0xD0,(byte)0x0B,(byte)0x36,(byte)0x7B,(byte)0x38,(byte)0x75,(byte)0xFC,(byte)0xB7,(byte)0x95,(byte)0x48,(byte)0x87,(byte)0x26,(byte)0x80,(byte)0xF6,
																			(byte)0x01,(byte)0xE8,(byte)0xC8,(byte)0x39,(byte)0xAC,(byte)0x07,(byte)0x21,(byte)0xBA,(byte)0xB3,(byte)0xB8,(byte)0x9E,(byte)0xD2,(byte)0x16,(byte)0x07,(byte)0x28,(byte)0x1C,
																			(byte)0x89,(byte)0x19,(byte)0xBF,(byte)0x72,(byte)0x62,(byte)0x66,(byte)0xEA,(byte)0xB8,(byte)0x48,(byte)0x50,(byte)0x2A,(byte)0xD8,(byte)0x74,(byte)0xB5,(byte)0x10,(byte)0x7A,
																			(byte)0x4E,(byte)0x65,(byte)0x4E,(byte)0xF6,(byte)0xD3,(byte)0x77,(byte)0x73,(byte)0x34,(byte)0x3F,(byte)0x46,(byte)0x14,(byte)0x35,(byte)0xC8,(byte)0x6E,(byte)0x4A,(byte)0x8F,
																			(byte)0x86,(byte)0x6F,(byte)0xB1,(byte)0x8C,(byte)0x7C,(byte)0xBA,(byte)0x49,(byte)0x7B,(byte)0x42,(byte)0x62,(byte)0x90,(byte)0xC3,(byte)0x8D,(byte)0x19,(byte)0x6E,(byte)0x2A,
																			(byte)0xFF,(byte)0x33,(byte)0xC0,(byte)0x90,(byte)0x6F,(byte)0x92,(byte)0x96,(byte)0xF2,(byte)0x97,(byte)0xE1,(byte)0x56,(byte)0xDC,(byte)0x60,(byte)0x2A,(byte)0x5E,(byte)0x65,
																			(byte)0x3C,(byte)0xA1,(byte)0x16,(byte)0x8F,(byte)0x11,(byte)0x09,(byte)0x26,(byte)0x11,(byte)0x14,(byte)0xBF,(byte)0x7B,(byte)0xE8,(byte)0x12,(byte)0x7A,(byte)0x3E,(byte)0x80,
																			(byte)0x07,(byte)0x19,(byte)0x18,(byte)0x30,(byte)0x13,(byte)0x42,(byte)0x99,(byte)0x39,(byte)0x5C,(byte)0xE2,(byte)0xB3,(byte)0x22,(byte)0x22,(byte)0x86,(byte)0x67,(byte)0xB7,
																			(byte)0x6E,(byte)0x07,(byte)0x2E,(byte)0xB7,(byte)0xFD,(byte)0x5D,(byte)0x0F,(byte)0xB3,(byte)0xA8,(byte)0x3E,(byte)0x8A,(byte)0xD1,(byte)0xD7,(byte)0xF6,(byte)0xFD,(byte)0x81
																		},
																		(byte)1,new byte[]{(byte)0x03},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																		new byte[]{(byte)0x00}
																		),

																		new EmvCapk(
																				new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x03,(byte)0x33},(byte)0x65,
																				(byte)0x00,(byte)0x01,(byte)0xB0,
																				new byte[]{(byte)0x81,(byte)0xBA,(byte)0x1E,(byte)0x6B,(byte)0x9F,(byte)0x67,(byte)0x1C,(byte)0xFC,(byte)0x84,(byte)0x8C,(byte)0xA2,(byte)0xAC,(byte)0xD8,(byte)0xE1,(byte)0x7A,(byte)0xF4,
																					(byte)0x06,(byte)0xB4,(byte)0xD3,(byte)0x29,(byte)0xD1,(byte)0xEC,(byte)0xA5,(byte)0xD0,(byte)0x1B,(byte)0xC0,(byte)0x94,(byte)0xA8,(byte)0x7C,(byte)0x30,(byte)0xAF,(byte)0x49,
																					(byte)0x86,(byte)0x79,(byte)0x44,(byte)0xC6,(byte)0x32,(byte)0xE8,(byte)0x18,(byte)0x50,(byte)0x74,(byte)0x65,(byte)0x5F,(byte)0xA5,(byte)0x35,(byte)0xAD,(byte)0x8C,(byte)0xA4,
																					(byte)0x2A,(byte)0x83,(byte)0xB4,(byte)0x1A,(byte)0xAA,(byte)0xEA,(byte)0x85,(byte)0x9F,(byte)0x43,(byte)0x2F,(byte)0xA0,(byte)0xB8,(byte)0x18,(byte)0xE7,(byte)0x2D,(byte)0xC0,
																					(byte)0x7E,(byte)0xD3,(byte)0xF7,(byte)0x7F,(byte)0xB3,(byte)0x18,(byte)0xA4,(byte)0x75,(byte)0xA2,(byte)0x61,(byte)0xC0,(byte)0x76,(byte)0x0A,(byte)0x15,(byte)0x6E,(byte)0x5D,
																					(byte)0xDC,(byte)0x15,(byte)0x7A,(byte)0xE8,(byte)0xB7,(byte)0x9B,(byte)0xA7,(byte)0x2D,(byte)0x89,(byte)0xD6,(byte)0x9F,(byte)0xFF,(byte)0x75,(byte)0x46,(byte)0x19,(byte)0xE9,
																					(byte)0x28,(byte)0xF1,(byte)0x51,(byte)0x6A,(byte)0x2A,(byte)0x72,(byte)0xC0,(byte)0xF8,(byte)0x6B,(byte)0x09,(byte)0xB8,(byte)0xEA,(byte)0x25,(byte)0xF8,(byte)0x6D,(byte)0xC5,
																					(byte)0xA4,(byte)0x8E,(byte)0xBC,(byte)0x5A,(byte)0x16,(byte)0xF8,(byte)0x3F,(byte)0xBA,(byte)0x8F,(byte)0xC4,(byte)0xE3,(byte)0xA9,(byte)0x82,(byte)0x78,(byte)0x91,(byte)0x22,
																					(byte)0x49,(byte)0xF4,(byte)0xE0,(byte)0x79,(byte)0xBC,(byte)0xBC,(byte)0x06,(byte)0xE7,(byte)0xBE,(byte)0xD9,(byte)0xAE,(byte)0xD3,(byte)0x97,(byte)0x87,(byte)0x9D,(byte)0x27,
																					(byte)0x9E,(byte)0xD9,(byte)0x19,(byte)0x25,(byte)0x39,(byte)0x49,(byte)0x01,(byte)0x26,(byte)0x09,(byte)0x49,(byte)0xBC,(byte)0xCE,(byte)0x6F,(byte)0xA1,(byte)0x16,(byte)0x97,
																					(byte)0x98,(byte)0xA2,(byte)0x71,(byte)0x5D,(byte)0xAE,(byte)0x32,(byte)0x98,(byte)0x8B,(byte)0xEF,(byte)0xBE,(byte)0x96,(byte)0x21,(byte)0xAE,(byte)0x15,(byte)0xE0,(byte)0xC1
																				},
																				(byte)3,new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																				new byte[]{(byte)0x00}
																				),

																				new EmvCapk(
																						new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x03,(byte)0x33},(byte)0x66,
																						(byte)0x00,(byte)0x01,(byte)0x60,
																						new byte[]{(byte)0x7F,(byte)0x5A,(byte)0x39,(byte)0x45,(byte)0x79,(byte)0x4D,(byte)0x6B,(byte)0x15,(byte)0xF5,(byte)0xF2,(byte)0x6B,(byte)0x4A,(byte)0x21,(byte)0xA6,(byte)0x3A,(byte)0x5E,
																							(byte)0xF3,(byte)0x55,(byte)0x40,(byte)0xD8,(byte)0xC8,(byte)0xC0,(byte)0x99,(byte)0x15,(byte)0x1F,(byte)0x22,(byte)0x79,(byte)0x78,(byte)0x0A,(byte)0x5C,(byte)0x18,(byte)0xA3,
																							(byte)0x17,(byte)0x70,(byte)0x3C,(byte)0x98,(byte)0x63,(byte)0x2E,(byte)0x80,(byte)0x4D,(byte)0x25,(byte)0x57,(byte)0x6A,(byte)0x7B,(byte)0x46,(byte)0x0C,(byte)0x05,(byte)0x06,
																							(byte)0x1E,(byte)0x03,(byte)0x97,(byte)0x5E,(byte)0x50,(byte)0xFB,(byte)0xD7,(byte)0x49,(byte)0x5B,(byte)0x3A,(byte)0xDC,(byte)0x8E,(byte)0x42,(byte)0x5E,(byte)0x53,(byte)0xDF,
																							(byte)0x76,(byte)0xFA,(byte)0x40,(byte)0xB0,(byte)0x35,(byte)0xE8,(byte)0x7F,(byte)0x69,(byte)0xAB,(byte)0xF8,(byte)0x76,(byte)0x5A,(byte)0x52,(byte)0x52,(byte)0x3F,(byte)0x3B,
																							(byte)0x1A,(byte)0x39,(byte)0xB1,(byte)0x95,(byte)0x28,(byte)0xB0,(byte)0x02,(byte)0x23,(byte)0x90,(byte)0x15,(byte)0xFA,(byte)0xDB,(byte)0xA5,(byte)0x92,(byte)0x10,(byte)0x51
																						},
																						(byte)3,new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																						new byte[]{(byte)0x00}
																						),

																						new EmvCapk(
																								new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x99,(byte)0x99},(byte)0xE1,
																								(byte)0x00,(byte)0x01,(byte)0x70,
																								new byte[]{(byte)0x99,(byte)0xC5,(byte)0xB7,(byte)0x0A,(byte)0xA6,(byte)0x1B,(byte)0x4F,(byte)0x4C,(byte)0x51,(byte)0xB6,(byte)0xF9,(byte)0x0B,(byte)0x0E,(byte)0x3B,(byte)0xFB,(byte)0x7A,
																									(byte)0x3E,(byte)0xE0,(byte)0xE7,(byte)0xDB,(byte)0x41,(byte)0xBC,(byte)0x46,(byte)0x68,(byte)0x88,(byte)0xB3,(byte)0xEC,(byte)0x8E,(byte)0x99,(byte)0x77,(byte)0xC7,(byte)0x62,
																									(byte)0x40,(byte)0x7E,(byte)0xF1,(byte)0xD7,(byte)0x9E,(byte)0x0A,(byte)0xFB,(byte)0x28,(byte)0x23,(byte)0x10,(byte)0x0A,(byte)0x02,(byte)0x0C,(byte)0x3E,(byte)0x80,(byte)0x20,
																									(byte)0x59,(byte)0x3D,(byte)0xB5,(byte)0x0E,(byte)0x90,(byte)0xDB,(byte)0xEA,(byte)0xC1,(byte)0x8B,(byte)0x78,(byte)0xD1,(byte)0x3F,(byte)0x96,(byte)0xBB,(byte)0x2F,(byte)0x57,
																									(byte)0xEE,(byte)0xDD,(byte)0xC3,(byte)0x0F,(byte)0x25,(byte)0x65,(byte)0x92,(byte)0x41,(byte)0x7C,(byte)0xDF,(byte)0x73,(byte)0x9C,(byte)0xA6,(byte)0x80,(byte)0x4A,(byte)0x10,
																									(byte)0xA2,(byte)0x9D,(byte)0x28,(byte)0x06,(byte)0xE7,(byte)0x74,(byte)0xBF,(byte)0xA7,(byte)0x51,(byte)0xF2,(byte)0x2C,(byte)0xF3,(byte)0xB6,(byte)0x5B,(byte)0x38,(byte)0xF3,
																									(byte)0x7F,(byte)0x91,(byte)0xB4,(byte)0xDA,(byte)0xF8,(byte)0xAE,(byte)0xC9,(byte)0xB8,(byte)0x03,(byte)0xF7,(byte)0x61,(byte)0x0E,(byte)0x06,(byte)0xAC,(byte)0x9E,(byte)0x6B
																								},
																								(byte)1,new byte[]{(byte)0x03},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																								new byte[]{(byte)0x00}
																								),

																								new EmvCapk(
																										new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x99,(byte)0x99},(byte)0xE2,
																										(byte)0x00,(byte)0x01,(byte)0x70,
																										new byte[]{(byte)0xBD,(byte)0x23,(byte)0x2E,(byte)0x34,(byte)0x8B,(byte)0x11,(byte)0x8E,(byte)0xB3,(byte)0xF6,(byte)0x44,(byte)0x6E,(byte)0xF4,(byte)0xDA,(byte)0x6C,(byte)0x3B,(byte)0xAC,
																											(byte)0x9B,(byte)0x2A,(byte)0xE5,(byte)0x10,(byte)0xC5,(byte)0xAD,(byte)0x10,(byte)0x7D,(byte)0x38,(byte)0x34,(byte)0x32,(byte)0x55,(byte)0xD2,(byte)0x1C,(byte)0x4B,(byte)0xDF,
																											(byte)0x49,(byte)0x52,(byte)0xA4,(byte)0x2E,(byte)0x92,(byte)0xC6,(byte)0x33,(byte)0xB1,(byte)0xCE,(byte)0x4B,(byte)0xFE,(byte)0xC3,(byte)0x9A,(byte)0xFB,(byte)0x6D,(byte)0xFE,
																											(byte)0x14,(byte)0x7E,(byte)0xCB,(byte)0xB9,(byte)0x1D,(byte)0x68,(byte)0x1D,(byte)0xAC,(byte)0x15,(byte)0xFB,(byte)0x0E,(byte)0x19,(byte)0x8E,(byte)0x9A,(byte)0x7E,(byte)0x46,
																											(byte)0x36,(byte)0xBD,(byte)0xCA,(byte)0x10,(byte)0x7B,(byte)0xCD,(byte)0xA3,(byte)0x38,(byte)0x4F,(byte)0xCB,(byte)0x28,(byte)0xB0,(byte)0x6A,(byte)0xFE,(byte)0xF9,(byte)0x0F,
																											(byte)0x09,(byte)0x9E,(byte)0x70,(byte)0x84,(byte)0x51,(byte)0x1F,(byte)0x3C,(byte)0xC0,(byte)0x10,(byte)0xD4,(byte)0x34,(byte)0x35,(byte)0x03,(byte)0xE1,(byte)0xE5,(byte)0xA6,
																											(byte)0x72,(byte)0x64,(byte)0xB4,(byte)0x36,(byte)0x7D,(byte)0xAA,(byte)0x9A,(byte)0x39,(byte)0x49,(byte)0x49,(byte)0x92,(byte)0x72,(byte)0xE9,(byte)0xB5,(byte)0x02,(byte)0x2F
																										},
																										(byte)1,new byte[]{(byte)0x03},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																										new byte[]{(byte)0x00}
																										),

																										new EmvCapk(
																												new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x99,(byte)0x99},(byte)0xE3,
																												(byte)0x00,(byte)0x01,(byte)0x70,
																												new byte[]{(byte)0xBC,(byte)0x01,(byte)0xE1,(byte)0x22,(byte)0x23,(byte)0xE1,(byte)0xA4,(byte)0x1E,(byte)0x88,(byte)0xBF,(byte)0xFA,(byte)0x80,(byte)0x10,(byte)0x93,(byte)0xC5,(byte)0xF8,
																													(byte)0xCE,(byte)0xC5,(byte)0xCD,(byte)0x05,(byte)0xDB,(byte)0xBD,(byte)0xBB,(byte)0x78,(byte)0x7C,(byte)0xE8,(byte)0x72,(byte)0x49,(byte)0xE8,(byte)0x80,(byte)0x83,(byte)0x27,
																													(byte)0xC2,(byte)0xD2,(byte)0x18,(byte)0x99,(byte)0x1F,(byte)0x97,(byte)0xA1,(byte)0x13,(byte)0x1E,(byte)0x8A,(byte)0x25,(byte)0xB0,(byte)0x12,(byte)0x2E,(byte)0xD1,(byte)0x1E,
																													(byte)0x70,(byte)0x9C,(byte)0x53,(byte)0x3E,(byte)0x88,(byte)0x86,(byte)0xA1,(byte)0x25,(byte)0x9A,(byte)0xDD,(byte)0xFD,(byte)0xCB,(byte)0xB3,(byte)0x96,(byte)0x60,(byte)0x4D,
																													(byte)0x24,(byte)0xE5,(byte)0x05,(byte)0xA2,(byte)0xD0,(byte)0xB5,(byte)0xDD,(byte)0x03,(byte)0x84,(byte)0xFB,(byte)0x00,(byte)0x02,(byte)0xA7,(byte)0xA1,(byte)0xEB,(byte)0x39,
																													(byte)0xBC,(byte)0x8A,(byte)0x11,(byte)0x33,(byte)0x9C,(byte)0x7A,(byte)0x94,(byte)0x33,(byte)0xA9,(byte)0x48,(byte)0x33,(byte)0x77,(byte)0x61,(byte)0xBE,(byte)0x73,(byte)0xBC,
																													(byte)0x49,(byte)0x7B,(byte)0x8E,(byte)0x58,(byte)0x73,(byte)0x6D,(byte)0xA4,(byte)0x63,(byte)0x65,(byte)0x38,(byte)0xAD,(byte)0x28,(byte)0x2D,(byte)0x3C,(byte)0xD3,(byte)0xDB
																												},
																												(byte)3,new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																												new byte[]{(byte)0x00}
																												),

																												new EmvCapk(
																														new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x99,(byte)0x99},(byte)0xE4,
																														(byte)0x00,(byte)0x01,(byte)0x80,
																														new byte[]{(byte)0xCB,(byte)0xF2,(byte)0xE4,(byte)0x0F,(byte)0x08,(byte)0x36,(byte)0xC9,(byte)0xA5,(byte)0xE3,(byte)0x90,(byte)0xA3,(byte)0x7B,(byte)0xE3,(byte)0xB8,(byte)0x09,(byte)0xBD,
																															(byte)0xF5,(byte)0xD7,(byte)0x40,(byte)0xCB,(byte)0x1D,(byte)0xA3,(byte)0x8C,(byte)0xFC,(byte)0x05,(byte)0xD5,(byte)0xF8,(byte)0xD6,(byte)0xB7,(byte)0x74,(byte)0x5B,(byte)0x5E,
																															(byte)0x9A,(byte)0x3F,(byte)0xA6,(byte)0x96,(byte)0x1E,(byte)0x55,(byte)0xFF,(byte)0x20,(byte)0x41,(byte)0x21,(byte)0x08,(byte)0x52,(byte)0x5E,(byte)0x66,(byte)0xB9,(byte)0x70,
																															(byte)0xF9,(byte)0x02,(byte)0xF7,(byte)0xFF,(byte)0x43,(byte)0x05,(byte)0xDD,(byte)0x83,(byte)0x2C,(byte)0xD0,(byte)0x76,(byte)0x3E,(byte)0x3A,(byte)0xA8,(byte)0xB8,(byte)0x17,
																															(byte)0x3F,(byte)0x84,(byte)0x77,(byte)0x71,(byte)0x00,(byte)0xB1,(byte)0x04,(byte)0x7B,(byte)0xD1,(byte)0xD7,(byte)0x44,(byte)0x50,(byte)0x93,(byte)0x12,(byte)0xA0,(byte)0x93,
																															(byte)0x2E,(byte)0xD2,(byte)0x5F,(byte)0xED,(byte)0x52,(byte)0xA9,(byte)0x59,(byte)0x43,(byte)0x07,(byte)0x68,(byte)0xCC,(byte)0xD9,(byte)0x02,(byte)0xFD,(byte)0x8C,(byte)0x8A,
																															(byte)0xD9,(byte)0x12,(byte)0x3E,(byte)0x6A,(byte)0xDD,(byte)0xB3,(byte)0xF3,(byte)0x4B,(byte)0x92,(byte)0xE7,(byte)0x92,(byte)0x4D,(byte)0x72,(byte)0x9C,(byte)0xB6,(byte)0x47,
																															(byte)0x35,(byte)0x33,(byte)0xAE,(byte)0x2B,(byte)0x2B,(byte)0x55,(byte)0xBF,(byte)0x0E,(byte)0x44,(byte)0x96,(byte)0x4F,(byte)0xDE,(byte)0xA8,(byte)0x44,(byte)0x01,(byte)0x17
																														},
																														(byte)1,new byte[]{(byte)0x03},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																														new byte[]{(byte)0x00}
																														),

																														new EmvCapk(
																																new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x99,(byte)0x99},(byte)0xE5,
																																(byte)0x00,(byte)0x01,(byte)0x80,
																																new byte[]{(byte)0xD4,(byte)0xFD,(byte)0xAE,(byte)0x94,(byte)0xDE,(byte)0xDB,(byte)0xEC,(byte)0xC6,(byte)0xD2,(byte)0x0D,(byte)0x38,(byte)0xB0,(byte)0x1E,(byte)0x91,(byte)0x82,(byte)0x6D,
																																	(byte)0xC6,(byte)0x95,(byte)0x43,(byte)0x38,(byte)0x37,(byte)0x99,(byte)0x17,(byte)0xB2,(byte)0xBB,(byte)0x8A,(byte)0x6B,(byte)0x36,(byte)0xB5,(byte)0xD3,(byte)0xB0,(byte)0xC5,
																																	(byte)0xED,(byte)0xA6,(byte)0x0B,(byte)0x33,(byte)0x74,(byte)0x48,(byte)0xBA,(byte)0xFF,(byte)0xEB,(byte)0xCC,(byte)0x3A,(byte)0xBD,(byte)0xBA,(byte)0x86,(byte)0x9E,(byte)0x8D,
																																	(byte)0xAD,(byte)0xEC,(byte)0x6C,(byte)0x87,(byte)0x01,(byte)0x10,(byte)0xC4,(byte)0x2F,(byte)0x5A,(byte)0xAB,(byte)0x90,(byte)0xA1,(byte)0x8F,(byte)0x4F,(byte)0x86,(byte)0x7F,
																																	(byte)0x72,(byte)0xE3,(byte)0x38,(byte)0x6F,(byte)0xFC,(byte)0x7E,(byte)0x67,(byte)0xE7,(byte)0xFF,(byte)0x94,(byte)0xEB,(byte)0xA0,(byte)0x79,(byte)0xE5,(byte)0x31,(byte)0xB3,
																																	(byte)0xCF,(byte)0x32,(byte)0x95,(byte)0x17,(byte)0xE8,(byte)0x1C,(byte)0x5D,(byte)0xD9,(byte)0xB3,(byte)0xDC,(byte)0x65,(byte)0xDB,(byte)0x5F,(byte)0x90,(byte)0x43,(byte)0x19,
																																	(byte)0x0B,(byte)0xE0,(byte)0xBE,(byte)0x89,(byte)0x7E,(byte)0x5F,(byte)0xE4,(byte)0x8A,(byte)0xDF,(byte)0x5D,(byte)0x3B,(byte)0xFA,(byte)0x05,(byte)0x85,(byte)0xE0,(byte)0x76,
																																	(byte)0xE5,(byte)0x54,(byte)0xF2,(byte)0x6E,(byte)0xC6,(byte)0x98,(byte)0x14,(byte)0x79,(byte)0x7F,(byte)0x15,(byte)0x66,(byte)0x9F,(byte)0x4A,(byte)0x25,(byte)0x5C,(byte)0x13
																																},
																																(byte)1,new byte[]{(byte)0x03},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																new byte[]{(byte)0x00}
																																),

																																new EmvCapk(
																																		new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x99,(byte)0x99},(byte)0xE6,
																																		(byte)0x00,(byte)0x01,(byte)0x80,
																																		new byte[]{(byte)0xEB,(byte)0xF9,(byte)0xFA,(byte)0xEC,(byte)0xC3,(byte)0xE5,(byte)0xC3,(byte)0x15,(byte)0x70,(byte)0x96,(byte)0x94,(byte)0x66,(byte)0x47,(byte)0x75,(byte)0xD3,(byte)0xFB,
																																			(byte)0xDA,(byte)0x5A,(byte)0x50,(byte)0x4D,(byte)0x89,(byte)0x34,(byte)0x4D,(byte)0xD9,(byte)0x20,(byte)0xC5,(byte)0x56,(byte)0x96,(byte)0xE8,(byte)0x91,(byte)0xD9,(byte)0xAB,
																																			(byte)0x62,(byte)0x25,(byte)0x98,(byte)0xA9,(byte)0xD6,(byte)0xAB,(byte)0x8F,(byte)0xBF,(byte)0x35,(byte)0xE4,(byte)0x59,(byte)0x9C,(byte)0xAB,(byte)0x7E,(byte)0xB2,(byte)0x2F,
																																			(byte)0x95,(byte)0x69,(byte)0x92,(byte)0xF8,(byte)0xAB,(byte)0x2E,(byte)0x65,(byte)0x35,(byte)0xDE,(byte)0xCB,(byte)0x6B,(byte)0x57,(byte)0x6F,(byte)0xA0,(byte)0x67,(byte)0x5F,
																																			(byte)0x97,(byte)0xC2,(byte)0x3D,(byte)0xD4,(byte)0xC3,(byte)0x74,(byte)0xA6,(byte)0x6E,(byte)0x6A,(byte)0xF4,(byte)0x19,(byte)0xC9,(byte)0xD2,(byte)0x04,(byte)0xD0,(byte)0xB9,
																																			(byte)0xF9,(byte)0x3C,(byte)0x08,(byte)0xD7,(byte)0x89,(byte)0xD6,(byte)0x38,(byte)0x05,(byte)0x66,(byte)0x0F,(byte)0xBB,(byte)0x62,(byte)0x9D,(byte)0xF1,(byte)0xB4,(byte)0x88,
																																			(byte)0xCF,(byte)0xA1,(byte)0xD7,(byte)0xA1,(byte)0x3E,(byte)0x9B,(byte)0x72,(byte)0x94,(byte)0x37,(byte)0xEE,(byte)0xAF,(byte)0xE7,(byte)0x18,(byte)0xEF,(byte)0xA8,(byte)0x59,
																																			(byte)0x34,(byte)0x8B,(byte)0xA0,(byte)0xD7,(byte)0x68,(byte)0x12,(byte)0xA9,(byte)0x9F,(byte)0x31,(byte)0xCD,(byte)0x36,(byte)0x4F,(byte)0x2A,(byte)0x4F,(byte)0xD4,(byte)0x2F
																																		},
																																		(byte)3,new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																		new byte[]{(byte)0x00}
																																		),

																																		new EmvCapk(
																																				new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x04},(byte)0xFE,
																																				(byte)0x00,(byte)0x01,(byte)0x90,
																																				new byte[]{(byte)0xE7,(byte)0x63,(byte)0x17,(byte)0x96,(byte)0x51,(byte)0x75,(byte)0xA0,(byte)0x8B,(byte)0xEE,(byte)0x51,(byte)0x0F,(byte)0x58,(byte)0x83,(byte)0x0E,(byte)0x87,(byte)0xB2,
																																					(byte)0x62,(byte)0xC7,(byte)0x0D,(byte)0x52,(byte)0x98,(byte)0x03,(byte)0x24,(byte)0x5F,(byte)0xA8,(byte)0xB8,(byte)0x8E,(byte)0x0C,(byte)0x75,(byte)0x35,(byte)0x62,(byte)0xDE,
																																					(byte)0x7A,(byte)0xEB,(byte)0x5A,(byte)0x9E,(byte)0x3E,(byte)0x6C,(byte)0x1A,(byte)0x98,(byte)0xE9,(byte)0x4D,(byte)0x8D,(byte)0xB7,(byte)0xC3,(byte)0x14,(byte)0x07,(byte)0xDA,
																																					(byte)0xC5,(byte)0xD0,(byte)0x71,(byte)0xE0,(byte)0x6B,(byte)0x80,(byte)0xB0,(byte)0x9E,(byte)0x14,(byte)0x6F,(byte)0x22,(byte)0xDB,(byte)0x85,(byte)0xF1,(byte)0xD7,(byte)0x2D,
																																					(byte)0x1E,(byte)0xA1,(byte)0x8D,(byte)0x22,(byte)0x60,(byte)0x00,(byte)0x32,(byte)0xC6,(byte)0xDD,(byte)0x40,(byte)0xE3,(byte)0x71,(byte)0x4D,(byte)0x5A,(byte)0xDA,(byte)0x7D,
																																					(byte)0xE9,(byte)0xD7,(byte)0xD0,(byte)0x1E,(byte)0x88,(byte)0x39,(byte)0x1F,(byte)0x89,(byte)0x31,(byte)0x56,(byte)0xD6,(byte)0xF4,(byte)0xBF,(byte)0x13,(byte)0xE9,(byte)0x06,
																																					(byte)0x35,(byte)0x59,(byte)0xDA,(byte)0x07,(byte)0x86,(byte)0xDE,(byte)0x9B,(byte)0xDE,(byte)0x6B,(byte)0x1C,(byte)0x9B,(byte)0x0B,(byte)0xB9,(byte)0x68,(byte)0xED,(byte)0xDE,
																																					(byte)0x07,(byte)0x14,(byte)0x5A,(byte)0xBF,(byte)0x87,(byte)0x7B,(byte)0x93,(byte)0x16,(byte)0x82,(byte)0xCC,(byte)0xB1,(byte)0xFB,(byte)0x80,(byte)0x07,(byte)0x28,(byte)0x72,
																																					(byte)0x4D,(byte)0x04,(byte)0xAF,(byte)0x24,(byte)0x1E,(byte)0x28,(byte)0x27,(byte)0xE0,(byte)0xFA,(byte)0x1F,(byte)0x62,(byte)0x59,(byte)0x19,(byte)0x14,(byte)0xFF,(byte)0x25
																																				},
																																				(byte)3,new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																				new byte[]{(byte)0x00}
																																				),

																																				new EmvCapk(
																																						new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x04},(byte)0xFC,
																																						(byte)0x00,(byte)0x01,(byte)0xF8,
																																						new byte[]{(byte)0xB3,(byte)0x29,(byte)0x6C,(byte)0x91,(byte)0xF4,(byte)0x79,(byte)0x5B,(byte)0xD9,(byte)0x71,(byte)0x12,(byte)0x60,(byte)0x69,(byte)0x03,(byte)0x40,(byte)0x7B,(byte)0x6E,
																																							(byte)0xFF,(byte)0x3A,(byte)0xB3,(byte)0x92,(byte)0x46,(byte)0xE9,(byte)0x10,(byte)0x95,(byte)0xE5,(byte)0x1D,(byte)0x17,(byte)0x86,(byte)0x7D,(byte)0xA4,(byte)0xAD,(byte)0xE5,
																																							(byte)0x9A,(byte)0x48,(byte)0xBE,(byte)0x2F,(byte)0xE9,(byte)0xB5,(byte)0x27,(byte)0x10,(byte)0x28,(byte)0x3D,(byte)0x3D,(byte)0x32,(byte)0x26,(byte)0x0E,(byte)0x2C,(byte)0x7D,
																																							(byte)0x24,(byte)0x72,(byte)0x14,(byte)0xC5,(byte)0x7D,(byte)0x46,(byte)0xAA,(byte)0x64,(byte)0x65,(byte)0xE4,(byte)0x7E,(byte)0x0A,(byte)0x4B,(byte)0x3F,(byte)0xFA,(byte)0xAD,
																																							(byte)0x8A,(byte)0x7F,(byte)0x6A,(byte)0x19,(byte)0x07,(byte)0x55,(byte)0xBC,(byte)0xCF,(byte)0xE3,(byte)0xF3,(byte)0xFB,(byte)0x39,(byte)0x89,(byte)0xA9,(byte)0xF6,(byte)0xB1,
																																							(byte)0xC9,(byte)0xE1,(byte)0x84,(byte)0x5B,(byte)0xCC,(byte)0xCA,(byte)0xD6,(byte)0xF2,(byte)0x0B,(byte)0x1D,(byte)0xAC,(byte)0x60,(byte)0x33,(byte)0x60,(byte)0x02,(byte)0x34,
																																							(byte)0xE8,(byte)0x1D,(byte)0xAC,(byte)0x41,(byte)0x53,(byte)0x21,(byte)0x2B,(byte)0x0F,(byte)0x76,(byte)0x0C,(byte)0x23,(byte)0x09,(byte)0x91,(byte)0x92,(byte)0xAA,(byte)0x6C,
																																							(byte)0x4C,(byte)0x90,(byte)0x83,(byte)0xBE,(byte)0xFF,(byte)0xD9,(byte)0xA7,(byte)0x9D,(byte)0x2A,(byte)0x27,(byte)0xB0,(byte)0x8F,(byte)0xEC,(byte)0xC8,(byte)0xE5,(byte)0xD4,
																																							(byte)0x37,(byte)0xD6,(byte)0xC6,(byte)0x85,(byte)0x50,(byte)0xA8,(byte)0x39,(byte)0xB1,(byte)0x29,(byte)0x41,(byte)0x51,(byte)0xDA,(byte)0xBA,(byte)0x9D,(byte)0x9C,(byte)0xB2,
																																							(byte)0xF1,(byte)0x60,(byte)0xF6,(byte)0x0F,(byte)0x74,(byte)0x92,(byte)0x89,(byte)0xF5,(byte)0x00,(byte)0xC8,(byte)0xC7,(byte)0xF3,(byte)0x34,(byte)0xBD,(byte)0x20,(byte)0xEB,
																																							(byte)0xAC,(byte)0x4A,(byte)0xB1,(byte)0x09,(byte)0xCF,(byte)0x3C,(byte)0x18,(byte)0x2F,(byte)0x1B,(byte)0x78,(byte)0x1C,(byte)0x7C,(byte)0x09,(byte)0x7A,(byte)0x79,(byte)0x03,
																																							(byte)0x53,(byte)0x07,(byte)0x46,(byte)0xC4,(byte)0x49,(byte)0xB9,(byte)0x9E,(byte)0x39,(byte)0xE4,(byte)0xDB,(byte)0x64,(byte)0x93,(byte)0xDD,(byte)0x2A,(byte)0x02,(byte)0xE3,
																																							(byte)0x7C,(byte)0x62,(byte)0xAE,(byte)0x8B,(byte)0xC9,(byte)0xA7,(byte)0x47,(byte)0x0E,(byte)0xCC,(byte)0xCF,(byte)0x8D,(byte)0xC0,(byte)0x6A,(byte)0x18,(byte)0xC3,(byte)0x3C,
																																							(byte)0xD2,(byte)0x4B,(byte)0x30,(byte)0xD5,(byte)0x6F,(byte)0x25,(byte)0xD2,(byte)0x75,(byte)0x5C,(byte)0xE8,(byte)0x2A,(byte)0xA4,(byte)0xDE,(byte)0x4D,(byte)0x2E,(byte)0xAE,
																																							(byte)0xC0,(byte)0x77,(byte)0x50,(byte)0xA0,(byte)0x3D,(byte)0xB7,(byte)0x5E,(byte)0xBD,(byte)0x0D,(byte)0x8E,(byte)0xBC,(byte)0x9F,(byte)0x2A,(byte)0x1D,(byte)0x85,(byte)0xA0,
																																							(byte)0xD2,(byte)0x52,(byte)0xEF,(byte)0xF4,(byte)0x03,(byte)0x29,(byte)0xBE,(byte)0x05
																																						},
																																						(byte)3,new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																						new byte[]{(byte)0x00}
																																						),

																																						new EmvCapk(
																																								new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x04},(byte)0xFD,
																																								(byte)0x00,(byte)0x01,(byte)0x90,
																																								new byte[]{(byte)0xC9,(byte)0x48,(byte)0x5D,(byte)0xBE,(byte)0xB5,(byte)0xE4,(byte)0x04,(byte)0x15,(byte)0xD1,(byte)0xB3,(byte)0x97,(byte)0x52,(byte)0x4F,(byte)0x47,(byte)0x68,(byte)0x5F,
																																									(byte)0x30,(byte)0x6C,(byte)0xFD,(byte)0xC4,(byte)0x99,(byte)0xD4,(byte)0xE2,(byte)0xE7,(byte)0xD0,(byte)0xCB,(byte)0xAF,(byte)0x22,(byte)0x2C,(byte)0xFA,(byte)0x81,(byte)0x84,
																																									(byte)0xBD,(byte)0x11,(byte)0x1D,(byte)0xAE,(byte)0xED,(byte)0xC9,(byte)0xCC,(byte)0x6E,(byte)0xC8,(byte)0x54,(byte)0x0C,(byte)0x3F,(byte)0x72,(byte)0x71,(byte)0xEA,(byte)0x99,
																																									(byte)0x90,(byte)0x11,(byte)0x9C,(byte)0xC5,(byte)0xC4,(byte)0x31,(byte)0x80,(byte)0x50,(byte)0x1D,(byte)0x9F,(byte)0x45,(byte)0x25,(byte)0x2D,(byte)0x68,(byte)0x35,(byte)0x05,
																																									(byte)0x3F,(byte)0xAE,(byte)0x35,(byte)0x69,(byte)0x6A,(byte)0xE8,(byte)0xCD,(byte)0x67,(byte)0xA3,(byte)0x25,(byte)0x64,(byte)0x74,(byte)0x49,(byte)0xCF,(byte)0x5E,(byte)0x59,
																																									(byte)0x4D,(byte)0xA8,(byte)0xF6,(byte)0x27,(byte)0x20,(byte)0x9F,(byte)0x7F,(byte)0x03,(byte)0xAE,(byte)0x8D,(byte)0x6D,(byte)0xFC,(byte)0x0D,(byte)0xB3,(byte)0xE7,(byte)0x9E,
																																									(byte)0x28,(byte)0xE4,(byte)0x15,(byte)0xDF,(byte)0x29,(byte)0xA5,(byte)0xB5,(byte)0x7D,(byte)0x68,(byte)0x14,(byte)0x85,(byte)0x6C,(byte)0xC3,(byte)0x0A,(byte)0x96,(byte)0xDA,
																																									(byte)0x5B,(byte)0x88,(byte)0x90,(byte)0x36,(byte)0x3E,(byte)0x50,(byte)0x7F,(byte)0xCB,(byte)0x2E,(byte)0x28,(byte)0x3D,(byte)0xA1,(byte)0xEB,(byte)0xB5,(byte)0xF1,(byte)0x8E,
																																									(byte)0x8E,(byte)0x24,(byte)0x10,(byte)0x2B,(byte)0x7D,(byte)0x01,(byte)0x92,(byte)0xBB,(byte)0x8E,(byte)0x35,(byte)0xA4,(byte)0xF7,(byte)0xCD,(byte)0x05,(byte)0xA4,(byte)0x35
																																								},
																																								(byte)3,new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																								new byte[]{(byte)0x00}
																																								),

																																								new EmvCapk(
																																										new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x04},(byte)0xFB,
																																										(byte)0x00,(byte)0x01,(byte)0x90,
																																										new byte[]{(byte)0x9B,(byte)0x17,(byte)0x06,(byte)0x03,(byte)0xA4,(byte)0x89,(byte)0xC7,(byte)0x54,(byte)0x6C,(byte)0x45,(byte)0xDA,(byte)0x57,(byte)0xB8,(byte)0xFF,(byte)0xD1,(byte)0xDB,
																																											(byte)0x20,(byte)0x61,(byte)0x24,(byte)0x0F,(byte)0x0E,(byte)0x8C,(byte)0x6D,(byte)0x1F,(byte)0x9A,(byte)0xBD,(byte)0xC6,(byte)0xB2,(byte)0x65,(byte)0xAA,(byte)0x89,(byte)0x11,
																																											(byte)0x91,(byte)0x5C,(byte)0x1A,(byte)0x4E,(byte)0xAB,(byte)0xD8,(byte)0xD0,(byte)0xED,(byte)0x47,(byte)0x55,(byte)0xD1,(byte)0xB9,(byte)0x02,(byte)0xBA,(byte)0x06,(byte)0xFE,
																																											(byte)0x5A,(byte)0x64,(byte)0x5B,(byte)0x78,(byte)0x6C,(byte)0xD2,(byte)0x41,(byte)0x29,(byte)0x55,(byte)0x17,(byte)0xD4,(byte)0x4E,(byte)0xF1,(byte)0xA7,(byte)0xC2,(byte)0x5D,
																																											(byte)0x75,(byte)0xAF,(byte)0xE0,(byte)0xEB,(byte)0x28,(byte)0x06,(byte)0x6E,(byte)0x4D,(byte)0x69,(byte)0xFE,(byte)0xE7,(byte)0xAB,(byte)0xAF,(byte)0xDD,(byte)0x5E,(byte)0xEB,
																																											(byte)0x23,(byte)0x0F,(byte)0x14,(byte)0xE4,(byte)0x02,(byte)0xC9,(byte)0x84,(byte)0x08,(byte)0x25,(byte)0xFA,(byte)0x77,(byte)0xEA,(byte)0xD1,(byte)0x2B,(byte)0x5F,(byte)0x1C,
																																											(byte)0x54,(byte)0x94,(byte)0x70,(byte)0x1D,(byte)0xE1,(byte)0x89,(byte)0x7F,(byte)0x65,(byte)0xFE,(byte)0x6B,(byte)0xF1,(byte)0x06,(byte)0xD4,(byte)0x75,(byte)0x45,(byte)0xEB,
																																											(byte)0xF7,(byte)0x0C,(byte)0xE7,(byte)0xC1,(byte)0x58,(byte)0x06,(byte)0x8C,(byte)0x61,(byte)0xF0,(byte)0x77,(byte)0x35,(byte)0x34,(byte)0xDB,(byte)0x74,(byte)0x2A,(byte)0xB8,
																																											(byte)0x3C,(byte)0x28,(byte)0x03,(byte)0x8C,(byte)0x14,(byte)0x94,(byte)0xF1,(byte)0x59,(byte)0x05,(byte)0xD0,(byte)0xAD,(byte)0x17,(byte)0xCF,(byte)0x1B,(byte)0xD3,(byte)0x8D
																																										},
																																										(byte)3,new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																										new byte[]{(byte)0x00}
																																										),

																																										new EmvCapk(
																																												new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x04},(byte)0xFA,
																																												(byte)0x00,(byte)0x01,(byte)0xF8,
																																												new byte[]{(byte)0xA4,(byte)0x20,(byte)0x3E,(byte)0x0C,(byte)0x7B,(byte)0xEB,(byte)0x27,(byte)0x09,(byte)0x7B,(byte)0x63,(byte)0xC1,(byte)0x03,(byte)0xC1,(byte)0x9F,(byte)0xDC,(byte)0xDA,
																																													(byte)0x67,(byte)0x1A,(byte)0xEA,(byte)0x7F,(byte)0x81,(byte)0x30,(byte)0x65,(byte)0x75,(byte)0x6F,(byte)0x3B,(byte)0x9B,(byte)0x81,(byte)0x81,(byte)0x0C,(byte)0xBD,(byte)0x4B,
																																													(byte)0xC4,(byte)0xDE,(byte)0xC5,(byte)0x48,(byte)0xFB,(byte)0xF1,(byte)0xF3,(byte)0xCD,(byte)0xAE,(byte)0x51,(byte)0xF8,(byte)0x47,(byte)0x23,(byte)0x5C,(byte)0xBF,(byte)0x2C,
																																													(byte)0x8B,(byte)0xAD,(byte)0xD8,(byte)0xAC,(byte)0xA7,(byte)0xC9,(byte)0x3B,(byte)0xEA,(byte)0x3D,(byte)0x44,(byte)0xE8,(byte)0x0E,(byte)0xD6,(byte)0xA7,(byte)0xB7,(byte)0x0E,
																																													(byte)0x29,(byte)0x62,(byte)0x26,(byte)0x19,(byte)0xDB,(byte)0x42,(byte)0x0A,(byte)0xCC,(byte)0xCE,(byte)0x07,(byte)0xE1,(byte)0xDD,(byte)0x4E,(byte)0x6C,(byte)0x35,(byte)0x4F,
																																													(byte)0x35,(byte)0x9F,(byte)0xBD,(byte)0xC9,(byte)0xC5,(byte)0xB7,(byte)0x08,(byte)0x13,(byte)0x92,(byte)0x6F,(byte)0x77,(byte)0xD8,(byte)0x27,(byte)0xE5,(byte)0x2B,(byte)0x19,
																																													(byte)0xDA,(byte)0xF0,(byte)0x9B,(byte)0xFA,(byte)0xE5,(byte)0x27,(byte)0x44,(byte)0x38,(byte)0xBB,(byte)0x8F,(byte)0x61,(byte)0xD1,(byte)0x77,(byte)0x53,(byte)0xC9,(byte)0xEC,
																																													(byte)0x0A,(byte)0x8E,(byte)0xFA,(byte)0x3B,(byte)0x7E,(byte)0x46,(byte)0xF0,(byte)0x26,(byte)0x92,(byte)0x16,(byte)0x0D,(byte)0x26,(byte)0x53,(byte)0xCD,(byte)0xBC,(byte)0xC7,
																																													(byte)0x1B,(byte)0x7D,(byte)0x48,(byte)0xBD,(byte)0x37,(byte)0x96,(byte)0x83,(byte)0x16,(byte)0xEB,(byte)0x44,(byte)0x4F,(byte)0x65,(byte)0x04,(byte)0xB9,(byte)0x42,(byte)0x1B,
																																													(byte)0x7D,(byte)0xD3,(byte)0x03,(byte)0x5A,(byte)0x2C,(byte)0x11,(byte)0x7D,(byte)0x8B,(byte)0x1F,(byte)0x76,(byte)0xA8,(byte)0x97,(byte)0x54,(byte)0x40,(byte)0xDA,(byte)0x95,
																																													(byte)0x63,(byte)0x61,(byte)0x81,(byte)0x02,(byte)0x39,(byte)0x7B,(byte)0x88,(byte)0x1C,(byte)0xEF,(byte)0x8A,(byte)0xDA,(byte)0x76,(byte)0x89,(byte)0xED,(byte)0xFA,(byte)0xCE,
																																													(byte)0x32,(byte)0x48,(byte)0x2A,(byte)0x2D,(byte)0xFF,(byte)0xED,(byte)0x65,(byte)0x6E,(byte)0x7F,(byte)0x95,(byte)0x1D,(byte)0xB8,(byte)0x41,(byte)0xDA,(byte)0x78,(byte)0x36,
																																													(byte)0x8C,(byte)0x62,(byte)0x93,(byte)0xBF,(byte)0xC1,(byte)0x05,(byte)0x3A,(byte)0x86,(byte)0xA8,(byte)0x45,(byte)0xBF,(byte)0xA6,(byte)0x57,(byte)0x8E,(byte)0x4B,(byte)0x69,
																																													(byte)0xF1,(byte)0x00,(byte)0xB4,(byte)0x2B,(byte)0x55,(byte)0x8F,(byte)0xDE,(byte)0x1A,(byte)0xEC,(byte)0xEC,(byte)0x6D,(byte)0x25,(byte)0x07,(byte)0x41,(byte)0xBC,(byte)0x78,
																																													(byte)0x3A,(byte)0xA8,(byte)0xA6,(byte)0x8A,(byte)0x42,(byte)0x61,(byte)0xE7,(byte)0xBB,(byte)0x92,(byte)0x46,(byte)0xB1,(byte)0x05,(byte)0x87,(byte)0xA4,(byte)0x98,(byte)0xD6,
																																													(byte)0x8D,(byte)0xD9,(byte)0x55,(byte)0xCE,(byte)0x8B,(byte)0x2B,(byte)0x24,(byte)0x33
																																												},
																																												(byte)3,new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																												new byte[]{(byte)0x00}
																																												),

																																												new EmvCapk(
																																														new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x04},(byte)0xFF,
																																														(byte)0x00,(byte)0x01,(byte)0x90,
																																														new byte[]{(byte)0xF6,(byte)0x9D,(byte)0xBB,(byte)0x5E,(byte)0x15,(byte)0x98,(byte)0x3E,(byte)0xAE,(byte)0x3C,(byte)0xCF,(byte)0x31,(byte)0xCF,(byte)0x4E,(byte)0x47,(byte)0x09,(byte)0x8C,
																																															(byte)0x2F,(byte)0xC1,(byte)0x6F,(byte)0x97,(byte)0xA0,(byte)0xC7,(byte)0x10,(byte)0xF8,(byte)0x47,(byte)0x77,(byte)0xEF,(byte)0xA9,(byte)0x96,(byte)0x22,(byte)0xD8,(byte)0x65,
																																															(byte)0x02,(byte)0xB1,(byte)0x38,(byte)0x72,(byte)0x8A,(byte)0xB1,(byte)0x2E,(byte)0x34,(byte)0x81,(byte)0xA8,(byte)0x4D,(byte)0x20,(byte)0xE0,(byte)0x14,(byte)0xAD,(byte)0x2D,
																																															(byte)0x63,(byte)0x4D,(byte)0x28,(byte)0x36,(byte)0xF2,(byte)0x7F,(byte)0x29,(byte)0x49,(byte)0x24,(byte)0xB8,(byte)0x95,(byte)0xA8,(byte)0x7F,(byte)0x91,(byte)0xF8,(byte)0x1B,
																																															(byte)0x81,(byte)0x69,(byte)0xD4,(byte)0xDF,(byte)0xDA,(byte)0xD8,(byte)0xD7,(byte)0xCB,(byte)0xD7,(byte)0x41,(byte)0x80,(byte)0x4C,(byte)0xD6,(byte)0x1B,(byte)0x46,(byte)0x7C,
																																															(byte)0x7A,(byte)0x9A,(byte)0xCF,(byte)0xEC,(byte)0xEB,(byte)0x71,(byte)0x18,(byte)0x8C,(byte)0xAA,(byte)0x73,(byte)0xA9,(byte)0x07,(byte)0x54,(byte)0x76,(byte)0x99,(byte)0xD4,
																																															(byte)0x5C,(byte)0x9C,(byte)0x7D,(byte)0x20,(byte)0x98,(byte)0xAC,(byte)0x29,(byte)0x66,(byte)0x26,(byte)0x64,(byte)0x17,(byte)0xF6,(byte)0x65,(byte)0xA4,(byte)0x6B,(byte)0xDD,
																																															(byte)0x01,(byte)0x2C,(byte)0x09,(byte)0x7D,(byte)0xBD,(byte)0x33,(byte)0xD1,(byte)0xD1,(byte)0x1A,(byte)0xFF,(byte)0x6E,(byte)0xC8,(byte)0xA9,(byte)0xC0,(byte)0xAD,(byte)0x81,
																																															(byte)0x4A,(byte)0x65,(byte)0xB4,(byte)0x82,(byte)0x62,(byte)0xCA,(byte)0x01,(byte)0x16,(byte)0x36,(byte)0x07,(byte)0x9A,(byte)0x32,(byte)0x8C,(byte)0x1A,(byte)0xAE,(byte)0xB7
																																														},
																																														(byte)3,new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																														new byte[]{(byte)0x00}
																																														),

																																														new EmvCapk(
																																																new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x65},(byte)0x02,
																																																(byte)0x00,(byte)0x01,(byte)0x80,
																																																new byte[]{(byte)0xBB,(byte)0x7F,(byte)0x51,(byte)0x98,(byte)0x3F,(byte)0xD8,(byte)0x70,(byte)0x7F,(byte)0xD6,(byte)0x22,(byte)0x7C,(byte)0x23,(byte)0xDE,(byte)0xF5,(byte)0xD5,(byte)0x37,
																																																	(byte)0x7A,(byte)0x5A,(byte)0x73,(byte)0x7C,(byte)0xEF,(byte)0x3C,(byte)0x52,(byte)0x52,(byte)0xE5,(byte)0x78,(byte)0xEF,(byte)0xE1,(byte)0x36,(byte)0xDF,(byte)0x87,(byte)0xB5,
																																																	(byte)0x04,(byte)0x73,(byte)0xF9,(byte)0x34,(byte)0x1F,(byte)0x16,(byte)0x40,(byte)0xC8,(byte)0xD2,(byte)0x58,(byte)0x03,(byte)0x4E,(byte)0x14,(byte)0xC1,(byte)0x69,(byte)0x93,
																																																	(byte)0xFC,(byte)0xE6,(byte)0xC6,(byte)0xB8,(byte)0xC3,(byte)0xCE,(byte)0xEB,(byte)0x65,(byte)0xFC,(byte)0x8F,(byte)0xBC,(byte)0xD8,(byte)0xEB,(byte)0x77,(byte)0xB3,(byte)0xB0,
																																																	(byte)0x5A,(byte)0xC7,(byte)0xC4,(byte)0xD0,(byte)0x9E,(byte)0x0F,(byte)0xA1,(byte)0xBA,(byte)0x2E,(byte)0xFE,(byte)0x87,(byte)0xD3,(byte)0x18,(byte)0x4D,(byte)0xB6,(byte)0x71,
																																																	(byte)0x8A,(byte)0xE4,(byte)0x1A,(byte)0x7C,(byte)0xAD,(byte)0x89,(byte)0xB8,(byte)0xDC,(byte)0xE0,(byte)0xFE,(byte)0x80,(byte)0xCE,(byte)0xB5,(byte)0x23,(byte)0xD5,(byte)0xD6,
																																																	(byte)0x47,(byte)0xF9,(byte)0xDB,(byte)0x58,(byte)0xA3,(byte)0x1D,(byte)0x2E,(byte)0x71,(byte)0xAC,(byte)0x67,(byte)0x7E,(byte)0x67,(byte)0xFA,(byte)0x6E,(byte)0x75,(byte)0x82,
																																																	(byte)0x07,(byte)0x36,(byte)0xC9,(byte)0x89,(byte)0x37,(byte)0x61,(byte)0xEE,(byte)0x4A,(byte)0xCD,(byte)0x11,(byte)0xF3,(byte)0x1D,(byte)0xBD,(byte)0xC3,(byte)0x49,(byte)0xEF
																																																},
																																																(byte)3,new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																																new byte[]{(byte)0x00}
																																																),

																																																new EmvCapk(
																																																		new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x65},(byte)0x03,
																																																		(byte)0x00,(byte)0x01,(byte)0xF8,
																																																		new byte[]{(byte)0xC9,(byte)0xE6,(byte)0xC1,(byte)0xF3,(byte)0xC6,(byte)0x94,(byte)0x9A,(byte)0x8A,(byte)0x42,(byte)0xA9,(byte)0x1F,(byte)0x8D,(byte)0x02,(byte)0x24,(byte)0x13,(byte)0x2B,
																																																			(byte)0x28,(byte)0x65,(byte)0xE6,(byte)0xD9,(byte)0x53,(byte)0xA5,(byte)0xB5,(byte)0xA5,(byte)0x4C,(byte)0xFF,(byte)0xB0,(byte)0x41,(byte)0x24,(byte)0x39,(byte)0xD5,(byte)0x4A,
																																																			(byte)0xEB,(byte)0xA7,(byte)0x9E,(byte)0x9B,(byte)0x39,(byte)0x9A,(byte)0x6C,(byte)0x10,(byte)0x46,(byte)0x84,(byte)0xDF,(byte)0x3F,(byte)0xB7,(byte)0x27,(byte)0xC7,(byte)0xF5,
																																																			(byte)0x59,(byte)0x84,(byte)0xDB,(byte)0x7A,(byte)0x45,(byte)0x0E,(byte)0x6A,(byte)0xA9,(byte)0x17,(byte)0xE1,(byte)0x10,(byte)0xA7,(byte)0xF2,(byte)0x34,(byte)0x3A,(byte)0x00,
																																																			(byte)0x24,(byte)0xD2,(byte)0x78,(byte)0x5D,(byte)0x9E,(byte)0xBE,(byte)0x09,(byte)0xF6,(byte)0x01,(byte)0xD5,(byte)0x92,(byte)0x36,(byte)0x2F,(byte)0xDB,(byte)0x23,(byte)0x77,
																																																			(byte)0x00,(byte)0xB5,(byte)0x67,(byte)0xBA,(byte)0x14,(byte)0xBB,(byte)0xE2,(byte)0xA6,(byte)0xD3,(byte)0xD2,(byte)0x3C,(byte)0xF1,(byte)0x27,(byte)0x0B,(byte)0x3D,(byte)0xD8,
																																																			(byte)0x22,(byte)0xB5,(byte)0x49,(byte)0x65,(byte)0x49,(byte)0xBF,(byte)0x88,(byte)0x49,(byte)0x48,(byte)0xF5,(byte)0x5A,(byte)0x0D,(byte)0x30,(byte)0x83,(byte)0x48,(byte)0xC4,
																																																			(byte)0xB7,(byte)0x23,(byte)0xBA,(byte)0xFB,(byte)0x6A,(byte)0x7F,(byte)0x39,(byte)0x75,(byte)0xAC,(byte)0x39,(byte)0x7C,(byte)0xAD,(byte)0x3C,(byte)0x5D,(byte)0x0F,(byte)0xC2,
																																																			(byte)0xD1,(byte)0x78,(byte)0x71,(byte)0x6F,(byte)0x5E,(byte)0x8E,(byte)0x79,(byte)0xE7,(byte)0x5B,(byte)0xEB,(byte)0x1C,(byte)0x84,(byte)0xFA,(byte)0x20,(byte)0x2F,(byte)0x80,
																																																			(byte)0xE6,(byte)0x80,(byte)0x69,(byte)0xA9,(byte)0x84,(byte)0xE0,(byte)0x08,(byte)0x70,(byte)0x6B,(byte)0x30,(byte)0xC2,(byte)0x12,(byte)0x30,(byte)0x54,(byte)0x56,(byte)0x20,
																																																			(byte)0x15,(byte)0x40,(byte)0x78,(byte)0x79,(byte)0x25,(byte)0xE8,(byte)0x6A,(byte)0x8B,(byte)0x28,(byte)0xB1,(byte)0x29,(byte)0xA1,(byte)0x1A,(byte)0xF2,(byte)0x04,(byte)0xB3,
																																																			(byte)0x87,(byte)0xCB,(byte)0x6E,(byte)0xE4,(byte)0x3D,(byte)0xB5,(byte)0x3D,(byte)0x15,(byte)0xA4,(byte)0x6E,(byte)0x13,(byte)0x90,(byte)0x1B,(byte)0xEB,(byte)0xD5,(byte)0xCE,
																																																			(byte)0xCF,(byte)0x48,(byte)0x54,(byte)0x25,(byte)0x1D,(byte)0x9E,(byte)0x98,(byte)0x75,(byte)0xB1,(byte)0x6E,(byte)0x82,(byte)0xAD,(byte)0x1C,(byte)0x59,(byte)0x38,(byte)0xA9,
																																																			(byte)0x72,(byte)0x84,(byte)0x2C,(byte)0x8F,(byte)0x1A,(byte)0x42,(byte)0xEB,(byte)0xB5,(byte)0xAE,(byte)0x53,(byte)0x36,(byte)0xB0,(byte)0x4F,(byte)0xF3,(byte)0xDA,(byte)0x8B,
																																																			(byte)0x8D,(byte)0xFB,(byte)0xE6,(byte)0x06,(byte)0xFC,(byte)0xA8,(byte)0xB9,(byte)0x08,(byte)0x4E,(byte)0xE0,(byte)0x5B,(byte)0xF6,(byte)0x79,(byte)0x50,(byte)0xBA,(byte)0x89,
																																																			(byte)0x89,(byte)0x7C,(byte)0xD0,(byte)0x89,(byte)0xF9,(byte)0x24,(byte)0xDB,(byte)0xCD
																																																		},
																																																		(byte)1,new byte[]{(byte)0x03},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																																		new byte[]{(byte)0x00}
																																																		),

																																																		new EmvCapk(
																																																				new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x03},(byte)0x50,
																																																				(byte)0x00,(byte)0x01,(byte)0x80,
																																																				new byte[]{(byte)0xD1,(byte)0x11,(byte)0x97,(byte)0x59,(byte)0x00,(byte)0x57,(byte)0xB8,(byte)0x41,(byte)0x96,(byte)0xC2,(byte)0xF4,(byte)0xD1,(byte)0x1A,(byte)0x8F,(byte)0x3C,(byte)0x05,
																																																					(byte)0x40,(byte)0x8F,(byte)0x42,(byte)0x2A,(byte)0x35,(byte)0xD7,(byte)0x02,(byte)0xF9,(byte)0x01,(byte)0x06,(byte)0xEA,(byte)0x5B,(byte)0x01,(byte)0x9B,(byte)0xB2,(byte)0x8A,
																																																					(byte)0xE6,(byte)0x07,(byte)0xAA,(byte)0x9C,(byte)0xDE,(byte)0xBC,(byte)0xD0,(byte)0xD8,(byte)0x1A,(byte)0x38,(byte)0xD4,(byte)0x8C,(byte)0x7E,(byte)0xBB,(byte)0x00,(byte)0x62,
																																																					(byte)0xD2,(byte)0x87,(byte)0x36,(byte)0x9E,(byte)0xC0,(byte)0xC4,(byte)0x21,(byte)0x24,(byte)0x24,(byte)0x6A,(byte)0xC3,(byte)0x0D,(byte)0x80,(byte)0xCD,(byte)0x60,(byte)0x2A,
																																																					(byte)0xB7,(byte)0x23,(byte)0x8D,(byte)0x51,(byte)0x08,(byte)0x4D,(byte)0xED,(byte)0x46,(byte)0x98,(byte)0x16,(byte)0x2C,(byte)0x59,(byte)0xD2,(byte)0x5E,(byte)0xAC,(byte)0x1E,
																																																					(byte)0x66,(byte)0x25,(byte)0x5B,(byte)0x4D,(byte)0xB2,(byte)0x35,(byte)0x25,(byte)0x26,(byte)0xEF,(byte)0x09,(byte)0x82,(byte)0xC3,(byte)0xB8,(byte)0xAD,(byte)0x3D,(byte)0x1C,
																																																					(byte)0xCE,(byte)0x85,(byte)0xB0,(byte)0x1D,(byte)0xB5,(byte)0x78,(byte)0x8E,(byte)0x75,(byte)0xE0,(byte)0x9F,(byte)0x44,(byte)0xBE,(byte)0x73,(byte)0x61,(byte)0x36,(byte)0x6D,
																																																					(byte)0xEF,(byte)0x9D,(byte)0x1E,(byte)0x13,(byte)0x17,(byte)0xB0,(byte)0x5E,(byte)0x5D,(byte)0x0F,(byte)0xF5,(byte)0x29,(byte)0x0F,(byte)0x88,(byte)0xA0,(byte)0xDB,(byte)0x47
																																																				},
																																																				(byte)3,new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																																				new byte[]{(byte)0x00}
																																																				),

																																																				new EmvCapk(
																																																						new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x03},(byte)0x51,
																																																						(byte)0x00,(byte)0x01,(byte)0x90,
																																																						new byte[]{(byte)0xDB,(byte)0x5F,(byte)0xA2,(byte)0x9D,(byte)0x1F,(byte)0xDA,(byte)0x8C,(byte)0x16,(byte)0x34,(byte)0xB0,(byte)0x4D,(byte)0xCC,(byte)0xFF,(byte)0x14,(byte)0x8A,(byte)0xBE,
																																																							(byte)0xE6,(byte)0x3C,(byte)0x77,(byte)0x20,(byte)0x35,(byte)0xC7,(byte)0x98,(byte)0x51,(byte)0xD3,(byte)0x51,(byte)0x21,(byte)0x07,(byte)0x58,(byte)0x6E,(byte)0x02,(byte)0xA9,
																																																							(byte)0x17,(byte)0xF7,(byte)0xC7,(byte)0xE8,(byte)0x85,(byte)0xE7,(byte)0xC4,(byte)0xA7,(byte)0xD5,(byte)0x29,(byte)0x71,(byte)0x0A,(byte)0x14,(byte)0x53,(byte)0x34,(byte)0xCE,
																																																							(byte)0x67,(byte)0xDC,(byte)0x41,(byte)0x2C,(byte)0xB1,(byte)0x59,(byte)0x7B,(byte)0x77,(byte)0xAA,(byte)0x25,(byte)0x43,(byte)0xB9,(byte)0x8D,(byte)0x19,(byte)0xCF,(byte)0x2C,
																																																							(byte)0xB8,(byte)0x0C,(byte)0x52,(byte)0x2B,(byte)0xDB,(byte)0xEA,(byte)0x0F,(byte)0x1B,(byte)0x11,(byte)0x3F,(byte)0xA2,(byte)0xC8,(byte)0x62,(byte)0x16,(byte)0xC8,(byte)0xC6,
																																																							(byte)0x10,(byte)0xA2,(byte)0xD5,(byte)0x8F,(byte)0x29,(byte)0xCF,(byte)0x33,(byte)0x55,(byte)0xCE,(byte)0xB1,(byte)0xBD,(byte)0x3E,(byte)0xF4,(byte)0x10,(byte)0xD1,(byte)0xED,
																																																							(byte)0xD1,(byte)0xF7,(byte)0xAE,(byte)0x0F,(byte)0x16,(byte)0x89,(byte)0x79,(byte)0x79,(byte)0xDE,(byte)0x28,(byte)0xC6,(byte)0xEF,(byte)0x29,(byte)0x3E,(byte)0x0A,(byte)0x19,
																																																							(byte)0x28,(byte)0x2B,(byte)0xD1,(byte)0xD7,(byte)0x93,(byte)0xF1,(byte)0x33,(byte)0x15,(byte)0x23,(byte)0xFC,(byte)0x71,(byte)0xA2,(byte)0x28,(byte)0x80,(byte)0x04,(byte)0x68,
																																																							(byte)0xC0,(byte)0x1A,(byte)0x36,(byte)0x53,(byte)0xD1,(byte)0x4C,(byte)0x6B,(byte)0x48,(byte)0x51,(byte)0xA5,(byte)0xC0,(byte)0x29,(byte)0x47,(byte)0x8E,(byte)0x75,(byte)0x7F
																																																						},
																																																						(byte)1,new byte[]{(byte)0x03},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																																						new byte[]{(byte)0x00}
																																																						),

																																																						new EmvCapk(
																																																								new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x03},(byte)0x53,
																																																								(byte)0x00,(byte)0x01,(byte)0xF8,
																																																								new byte[]{(byte)0xBC,(byte)0xD8,(byte)0x37,(byte)0x21,(byte)0xBE,(byte)0x52,(byte)0xCC,(byte)0xCC,(byte)0x4B,(byte)0x64,(byte)0x57,(byte)0x32,(byte)0x1F,(byte)0x22,(byte)0xA7,(byte)0xDC,
																																																									(byte)0x76,(byte)0x9F,(byte)0x54,(byte)0xEB,(byte)0x80,(byte)0x25,(byte)0x91,(byte)0x3B,(byte)0xE8,(byte)0x04,(byte)0xD9,(byte)0xEA,(byte)0xBB,(byte)0xFA,(byte)0x19,(byte)0xB3,
																																																									(byte)0xD7,(byte)0xC5,(byte)0xD3,(byte)0xCA,(byte)0x65,(byte)0x8D,(byte)0x76,(byte)0x8C,(byte)0xAF,(byte)0x57,(byte)0x06,(byte)0x7E,(byte)0xEC,(byte)0x83,(byte)0xC7,(byte)0xE6,
																																																									(byte)0xE9,(byte)0xF8,(byte)0x1D,(byte)0x05,(byte)0x86,(byte)0x70,(byte)0x3E,(byte)0xD9,(byte)0xDD,(byte)0xDA,(byte)0xDD,(byte)0x20,(byte)0x67,(byte)0x5D,(byte)0x63,(byte)0x42,
																																																									(byte)0x49,(byte)0x80,(byte)0xB1,(byte)0x0E,(byte)0xB3,(byte)0x64,(byte)0xE8,(byte)0x1E,(byte)0xB3,(byte)0x7D,(byte)0xB4,(byte)0x0E,(byte)0xD1,(byte)0x00,(byte)0x34,(byte)0x4C,
																																																									(byte)0x92,(byte)0x88,(byte)0x86,(byte)0xFF,(byte)0x4C,(byte)0xCC,(byte)0x37,(byte)0x20,(byte)0x3E,(byte)0xE6,(byte)0x10,(byte)0x6D,(byte)0x5B,(byte)0x59,(byte)0xD1,(byte)0xAC,
																																																									(byte)0x10,(byte)0x2E,(byte)0x2C,(byte)0xD2,(byte)0xD7,(byte)0xAC,(byte)0x17,(byte)0xF4,(byte)0xD9,(byte)0x6C,(byte)0x39,(byte)0x8E,(byte)0x5F,(byte)0xD9,(byte)0x93,(byte)0xEC,
																																																									(byte)0xB4,(byte)0xFF,(byte)0xDF,(byte)0x79,(byte)0xB1,(byte)0x75,(byte)0x47,(byte)0xFF,(byte)0x9F,(byte)0xA2,(byte)0xAA,(byte)0x8E,(byte)0xEF,(byte)0xD6,(byte)0xCB,(byte)0xDA,
																																																									(byte)0x12,(byte)0x4C,(byte)0xBB,(byte)0x17,(byte)0xA0,(byte)0xF8,(byte)0x52,(byte)0x81,(byte)0x46,(byte)0x38,(byte)0x71,(byte)0x35,(byte)0xE2,(byte)0x26,(byte)0xB0,(byte)0x05,
																																																									(byte)0xA4,(byte)0x74,(byte)0xB9,(byte)0x06,(byte)0x2F,(byte)0xF2,(byte)0x64,(byte)0xD2,(byte)0xFF,(byte)0x8E,(byte)0xFA,(byte)0x36,(byte)0x81,(byte)0x4A,(byte)0xA2,(byte)0x95,
																																																									(byte)0x00,(byte)0x65,(byte)0xB1,(byte)0xB0,(byte)0x4C,(byte)0x0A,(byte)0x1A,(byte)0xE9,(byte)0xB2,(byte)0xF6,(byte)0x9D,(byte)0x4A,(byte)0x4A,(byte)0xA9,(byte)0x79,(byte)0xD6,
																																																									(byte)0xCE,(byte)0x95,(byte)0xFE,(byte)0xE9,(byte)0x48,(byte)0x5E,(byte)0xD0,(byte)0xA0,(byte)0x3A,(byte)0xEE,(byte)0x9B,(byte)0xD9,(byte)0x53,(byte)0xE8,(byte)0x1C,(byte)0xFD,
																																																									(byte)0x1E,(byte)0xF6,(byte)0xE8,(byte)0x14,(byte)0xDF,(byte)0xD3,(byte)0xC2,(byte)0xCE,(byte)0x37,(byte)0xAE,(byte)0xFA,(byte)0x38,(byte)0xC1,(byte)0xF9,(byte)0x87,(byte)0x73,
																																																									(byte)0x71,(byte)0xE9,(byte)0x1D,(byte)0x6A,(byte)0x5E,(byte)0xB5,(byte)0x9F,(byte)0xDE,(byte)0xDF,(byte)0x75,(byte)0xD3,(byte)0x32,(byte)0x5F,(byte)0xA3,(byte)0xCA,(byte)0x66,
																																																									(byte)0xCD,(byte)0xFB,(byte)0xA0,(byte)0xE5,(byte)0x71,(byte)0x46,(byte)0xCC,(byte)0x78,(byte)0x98,(byte)0x18,(byte)0xFF,(byte)0x06,(byte)0xBE,(byte)0x5F,(byte)0xCC,(byte)0x50,
																																																									(byte)0xAB,(byte)0xD3,(byte)0x62,(byte)0xAE,(byte)0x4B,(byte)0x80,(byte)0x99,(byte)0x6D
																																																								},
																																																								(byte)1,new byte[]{(byte)0x03},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																																								new byte[]{(byte)0x00}
																																																								),

																																																								new EmvCapk(
																																																										new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x03},(byte)0x94,
																																																										(byte)0x00,(byte)0x01,(byte)0xF8,
																																																										new byte[]{(byte)0xD1,(byte)0xBE,(byte)0x39,(byte)0x61,(byte)0x5F,(byte)0x39,(byte)0x5A,(byte)0xC9,(byte)0x33,(byte)0x7E,(byte)0x33,(byte)0x07,(byte)0xAA,(byte)0x5A,(byte)0x7A,(byte)0xC3,
																																																											(byte)0x5E,(byte)0xAE,(byte)0x00,(byte)0x36,(byte)0xBF,(byte)0x20,(byte)0xB9,(byte)0x2F,(byte)0x9A,(byte)0x45,(byte)0xD1,(byte)0x90,(byte)0xB2,(byte)0xF4,(byte)0x61,(byte)0x6A,
																																																											(byte)0xBF,(byte)0x9D,(byte)0x34,(byte)0x0C,(byte)0xBF,(byte)0x5F,(byte)0xBB,(byte)0x3A,(byte)0x2B,(byte)0x94,(byte)0xBD,(byte)0x8F,(byte)0x2F,(byte)0x97,(byte)0x7C,(byte)0x0A,
																																																											(byte)0x10,(byte)0xB9,(byte)0x0E,(byte)0x59,(byte)0xD4,(byte)0x20,(byte)0x1A,(byte)0xA3,(byte)0x26,(byte)0x69,(byte)0xE8,(byte)0xCB,(byte)0xE7,(byte)0x53,(byte)0xF5,(byte)0x36,
																																																											(byte)0x11,(byte)0x9D,(byte)0xF4,(byte)0xFB,(byte)0x5E,(byte)0x63,(byte)0xCE,(byte)0xD8,(byte)0x7F,(byte)0x11,(byte)0x53,(byte)0xCE,(byte)0x91,(byte)0x4B,(byte)0x12,(byte)0x4F,
																																																											(byte)0x3E,(byte)0x6B,(byte)0x64,(byte)0x8C,(byte)0xD5,(byte)0xC9,(byte)0x76,(byte)0x55,(byte)0xF7,(byte)0xAB,(byte)0x4D,(byte)0xF6,(byte)0x26,(byte)0x07,(byte)0xC9,(byte)0x5D,
																																																											(byte)0xA5,(byte)0x05,(byte)0x17,(byte)0xAB,(byte)0x8B,(byte)0xE3,(byte)0x83,(byte)0x66,(byte)0x72,(byte)0xD1,(byte)0xC7,(byte)0x1B,(byte)0xCD,(byte)0xE9,(byte)0xBA,(byte)0x72,
																																																											(byte)0x93,(byte)0xFF,(byte)0x34,(byte)0x82,(byte)0xF1,(byte)0x24,(byte)0xF8,(byte)0x66,(byte)0x91,(byte)0x13,(byte)0x0A,(byte)0xB0,(byte)0x81,(byte)0x77,(byte)0xB0,(byte)0x2F,
																																																											(byte)0x45,(byte)0x9C,(byte)0x02,(byte)0x5A,(byte)0x1F,(byte)0x3D,(byte)0xFF,(byte)0xE0,(byte)0x88,(byte)0x4C,(byte)0xE7,(byte)0x81,(byte)0x22,(byte)0x54,(byte)0x2E,(byte)0xA1,
																																																											(byte)0xC8,(byte)0xEA,(byte)0x09,(byte)0x2B,(byte)0x55,(byte)0x2B,(byte)0x58,(byte)0x69,(byte)0x07,(byte)0xC8,(byte)0x3A,(byte)0xD6,(byte)0x5E,(byte)0x0C,(byte)0x6F,(byte)0x91,
																																																											(byte)0xA4,(byte)0x00,(byte)0xE4,(byte)0x85,(byte)0xE1,(byte)0x11,(byte)0x92,(byte)0xAA,(byte)0x4C,(byte)0x17,(byte)0x1C,(byte)0x5A,(byte)0x1E,(byte)0xF5,(byte)0x63,(byte)0x81,
																																																											(byte)0xF4,(byte)0xD0,(byte)0x91,(byte)0xCC,(byte)0x7E,(byte)0xF6,(byte)0xBD,(byte)0x86,(byte)0x04,(byte)0xCB,(byte)0xC4,(byte)0xC7,(byte)0x4D,(byte)0x5D,(byte)0x77,(byte)0xFF,
																																																											(byte)0xA0,(byte)0x7B,(byte)0x64,(byte)0x1D,(byte)0x53,(byte)0x99,(byte)0x8C,(byte)0xDB,(byte)0x5C,(byte)0x21,(byte)0xB7,(byte)0xBC,(byte)0x65,(byte)0xE0,(byte)0x82,(byte)0xA6,
																																																											(byte)0x51,(byte)0x3F,(byte)0x42,(byte)0x4A,(byte)0x4B,(byte)0x25,(byte)0x2E,(byte)0x0D,(byte)0x77,(byte)0xFA,(byte)0x40,(byte)0x56,(byte)0x98,(byte)0x6A,(byte)0x0A,(byte)0xB0,
																																																											(byte)0xCD,(byte)0xA6,(byte)0x15,(byte)0x5E,(byte)0xD9,(byte)0xA8,(byte)0x83,(byte)0xC6,(byte)0x9C,(byte)0xC2,(byte)0x99,(byte)0x2D,(byte)0x49,(byte)0xEC,(byte)0xBD,(byte)0x47,
																																																											(byte)0x97,(byte)0xDD,(byte)0x28,(byte)0x64,(byte)0xFF,(byte)0xC9,(byte)0x6B,(byte)0x8D
																																																										},
																																																										(byte)3,new byte[]{(byte)0x01,(byte)0x00,(byte)0x01},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																																										new byte[]{(byte)0x00}
																																																										),

																																																										new EmvCapk(
																																																												new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x03},(byte)0x96,
																																																												(byte)0x00,(byte)0x01,(byte)0x80,
																																																												new byte[]{(byte)0xB7,(byte)0x45,(byte)0x86,(byte)0xD1,(byte)0x9A,(byte)0x20,(byte)0x7B,(byte)0xE6,(byte)0x62,(byte)0x7C,(byte)0x5B,(byte)0x0A,(byte)0xAF,(byte)0xBC,(byte)0x44,(byte)0xA2,
																																																													(byte)0xEC,(byte)0xF5,(byte)0xA2,(byte)0x94,(byte)0x2D,(byte)0x3A,(byte)0x26,(byte)0xCE,(byte)0x19,(byte)0xC4,(byte)0xFF,(byte)0xAE,(byte)0xEE,(byte)0x92,(byte)0x05,(byte)0x21,
																																																													(byte)0x86,(byte)0x89,(byte)0x22,(byte)0xE8,(byte)0x93,(byte)0xE7,(byte)0x83,(byte)0x82,(byte)0x25,(byte)0xA3,(byte)0x94,(byte)0x7A,(byte)0x26,(byte)0x14,(byte)0x79,(byte)0x6F,
																																																													(byte)0xB2,(byte)0xC0,(byte)0x62,(byte)0x8C,(byte)0xE8,(byte)0xC1,(byte)0x1E,(byte)0x38,(byte)0x25,(byte)0xA5,(byte)0x6D,(byte)0x3B,(byte)0x1B,(byte)0xBA,(byte)0xEF,(byte)0x78,
																																																													(byte)0x3A,(byte)0x5C,(byte)0x6A,(byte)0x81,(byte)0xF3,(byte)0x6F,(byte)0x86,(byte)0x25,(byte)0x39,(byte)0x51,(byte)0x26,(byte)0xFA,(byte)0x98,(byte)0x3C,(byte)0x52,(byte)0x16,
																																																													(byte)0xD3,(byte)0x16,(byte)0x6D,(byte)0x48,(byte)0xAC,(byte)0xDE,(byte)0x8A,(byte)0x43,(byte)0x12,(byte)0x12,(byte)0xFF,(byte)0x76,(byte)0x3A,(byte)0x7F,(byte)0x79,(byte)0xD9,
																																																													(byte)0xED,(byte)0xB7,(byte)0xFE,(byte)0xD7,(byte)0x6B,(byte)0x48,(byte)0x5D,(byte)0xE4,(byte)0x5B,(byte)0xEB,(byte)0x82,(byte)0x9A,(byte)0x3D,(byte)0x47,(byte)0x30,(byte)0x84,
																																																													(byte)0x8A,(byte)0x36,(byte)0x6D,(byte)0x33,(byte)0x24,(byte)0xC3,(byte)0x02,(byte)0x70,(byte)0x32,(byte)0xFF,(byte)0x8D,(byte)0x16,(byte)0xA1,(byte)0xE4,(byte)0x4D,(byte)0x8D
																																																												},
																																																												(byte)1,new byte[]{(byte)0x03},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																																												new byte[]{(byte)0x00}
																																																												),

																																																												new EmvCapk(
																																																														new byte[]{(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x03},(byte)0x97,
																																																														(byte)0x00,(byte)0x01,(byte)0x60,
																																																														new byte[]{(byte)0xAF,(byte)0x07,(byte)0x54,(byte)0xEA,(byte)0xED,(byte)0x97,(byte)0x70,(byte)0x43,(byte)0xAB,(byte)0x6F,(byte)0x41,(byte)0xD6,(byte)0x31,(byte)0x2A,(byte)0xB1,(byte)0xE2,
																																																															(byte)0x2A,(byte)0x68,(byte)0x09,(byte)0x17,(byte)0x5B,(byte)0xEB,(byte)0x28,(byte)0xE7,(byte)0x0D,(byte)0x5F,(byte)0x99,(byte)0xB2,(byte)0xDF,(byte)0x18,(byte)0xCA,(byte)0xE7,
																																																															(byte)0x35,(byte)0x19,(byte)0x34,(byte)0x1B,(byte)0xBB,(byte)0xD3,(byte)0x27,(byte)0xD0,(byte)0xB8,(byte)0xBE,(byte)0x9D,(byte)0x4D,(byte)0x0E,(byte)0x15,(byte)0xF0,(byte)0x7D,
																																																															(byte)0x36,(byte)0xEA,(byte)0x3E,(byte)0x3A,(byte)0x05,(byte)0xC8,(byte)0x92,(byte)0xF5,(byte)0xB1,(byte)0x9A,(byte)0x3E,(byte)0x9D,(byte)0x34,(byte)0x13,(byte)0xB0,(byte)0xD9,
																																																															(byte)0x7E,(byte)0x7A,(byte)0xD1,(byte)0x0A,(byte)0x5F,(byte)0x5D,(byte)0xE8,(byte)0xE3,(byte)0x88,(byte)0x60,(byte)0xC0,(byte)0xAD,(byte)0x00,(byte)0x4B,(byte)0x1E,(byte)0x06,
																																																															(byte)0xF4,(byte)0x04,(byte)0x0C,(byte)0x29,(byte)0x5A,(byte)0xCB,(byte)0x45,(byte)0x7A,(byte)0x78,(byte)0x85,(byte)0x51,(byte)0xB6,(byte)0x12,(byte)0x7C,(byte)0x0B,(byte)0x29
																																																														},
																																																														(byte)1,new byte[]{(byte)0x03},new byte[]{(byte)0x50,(byte)0x12,(byte)0x31},
																																																														new byte[]{(byte)0x00}
																																																														)
		};

		int len = new EmvCapk().size();
		if( FileApi.GetFileSize_Api(EmvCommonConstants.CAPK_FILE) == len * 29 )
			return;

		FileApi.DelFile_Api(EmvCommonConstants.CAPK_FILE);
		for(i=0; i< 29; i++)
		{
			FileApi.WriteFile_Api(EmvCommonConstants.CAPK_FILE, tempCAPK[i].toBytes(), i*len, len);
		}
	
	}
	/*************************************************************************************
	��    ��: ������
	��    Ȩ: �����������Ӽ���(����)���޹�˾
	��������: �õ�POS������ģʽ(���������ˢ������)
	�������: ��
	�������: ��
	�� �� ֵ: 
	��    ע: ��
	 *************************************************************************************/
	public static int GetPosEntryMode()
	{
		//02--������07-qpboc, 98--�ǽ�pboc, 05--icc
		if(EmvLibApi.EmvGetPath_Api() == EmvCommonConstants.PATH_QPBOC)
			return 07;

		else if(EmvLibApi.EmvGetPath_Api() == EmvCommonConstants.PATH_PBOC)
		{
			if((G_IcCardMode == CoreDefConstants.EXPICCCARD)||(G_IcCardMode == CoreDefConstants.PEDPICCCARD))
			{
				return 0x98;
			}
			else
				return 0x05;
		}
		else
			return 0x02;	//�Ͱٸ�����һ��
	}
	/*************************************************************************************
	��    ��: ������
	��    Ȩ: �����������Ӽ���(����)���޹�˾
	��������: �õ����ͻ�
	�������: ��
	�������: ��
	�� �� ֵ: 0
	��    ע: ��������ӿ�Ŀǰû���õ�
	 *************************************************************************************/
	public static int GetPosBatchCaptureInfo()
	{
		return 0;	
	}
	/*************************************************************************************
	��    ��: ������
	��    Ȩ: �����������Ӽ���(����)���޹�˾
	��������: �õ��ն��Ƿ�֧��Advices��Ϣ
	�������: ��
	�������: ��
	�� �� ֵ: 1
	��    ע: ��������ӿ�Ŀǰû���õ�
	 *************************************************************************************/
	public static int GetPosAdviceSupportInfo()
	{
		return 1;	
	}
}
